2022-04-05 19:44:56,359 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]
CUDA available: True
GPU 0: Tesla V100-PCIE-32GB
CUDA_HOME: None
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.5.5
MMCV: 1.4.8
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.0
MMDetection: 2.22.0+6ddbff8
------------------------------------------------------------

2022-04-05 19:44:57,767 - mmdet - INFO - Distributed training: False
2022-04-05 19:44:59,133 - mmdet - INFO - Config:
dataset_type = 'CocoDataset'
data_root = '../dataset/'
classes = [
    'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',
    'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'
]
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
albu_train_transforms = [
    dict(
        type='OneOf',
        transforms=[
            dict(type='Flip', p=1.0),
            dict(type='RandomRotate90', p=1.0)
        ],
        p=0.5),
    dict(
        type='RandomResizedCrop',
        height=768,
        width=768,
        scale=(0.5, 1.0),
        p=0.5),
    dict(
        type='RandomBrightnessContrast',
        brightness_limit=0.1,
        contrast_limit=0.15,
        p=0.5),
    dict(
        type='HueSaturationValue',
        hue_shift_limit=15,
        sat_shift_limit=25,
        val_shift_limit=10,
        p=0.5),
    dict(type='GaussNoise', p=0.3),
    dict(
        type='OneOf',
        transforms=[
            dict(type='Blur', p=1.0),
            dict(type='GaussianBlur', p=1.0),
            dict(type='MedianBlur', blur_limit=5, p=1.0),
            dict(type='MotionBlur', p=1.0)
        ],
        p=0.1)
]
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(768, 768), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.0),
    dict(
        type='Albu',
        transforms=[
            dict(
                type='OneOf',
                transforms=[
                    dict(type='Flip', p=1.0),
                    dict(type='RandomRotate90', p=1.0)
                ],
                p=0.5),
            dict(
                type='RandomResizedCrop',
                height=768,
                width=768,
                scale=(0.5, 1.0),
                p=0.5),
            dict(
                type='RandomBrightnessContrast',
                brightness_limit=0.1,
                contrast_limit=0.15,
                p=0.5),
            dict(
                type='HueSaturationValue',
                hue_shift_limit=15,
                sat_shift_limit=25,
                val_shift_limit=10,
                p=0.5),
            dict(type='GaussNoise', p=0.3),
            dict(
                type='OneOf',
                transforms=[
                    dict(type='Blur', p=1.0),
                    dict(type='GaussianBlur', p=1.0),
                    dict(type='MedianBlur', blur_limit=5, p=1.0),
                    dict(type='MotionBlur', p=1.0)
                ],
                p=0.1)
        ],
        bbox_params=dict(
            type='BboxParams',
            format='pascal_voc',
            label_fields=['gt_labels'],
            min_visibility=0.0,
            filter_lost_elements=True),
        keymap=dict(img='image', gt_bboxes='bboxes'),
        update_pad_shape=False,
        skip_img_without_anno=True),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
valid_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1024, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1024, 1024),
        flip=True,
        flip_direction=['horizontal', 'vertical', 'diagonal'],
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=14,
    workers_per_gpu=3,
    train=dict(
        type='CocoDataset',
        ann_file='/opt/ml/detection/dataset/cv_train_1.json',
        img_prefix='/opt/ml/detection/dataset/',
        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',
                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(768, 768), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.0),
            dict(
                type='Albu',
                transforms=[
                    dict(
                        type='OneOf',
                        transforms=[
                            dict(type='Flip', p=1.0),
                            dict(type='RandomRotate90', p=1.0)
                        ],
                        p=0.5),
                    dict(
                        type='RandomResizedCrop',
                        height=768,
                        width=768,
                        scale=(0.5, 1.0),
                        p=0.5),
                    dict(
                        type='RandomBrightnessContrast',
                        brightness_limit=0.1,
                        contrast_limit=0.15,
                        p=0.5),
                    dict(
                        type='HueSaturationValue',
                        hue_shift_limit=15,
                        sat_shift_limit=25,
                        val_shift_limit=10,
                        p=0.5),
                    dict(type='GaussNoise', p=0.3),
                    dict(
                        type='OneOf',
                        transforms=[
                            dict(type='Blur', p=1.0),
                            dict(type='GaussianBlur', p=1.0),
                            dict(type='MedianBlur', blur_limit=5, p=1.0),
                            dict(type='MotionBlur', p=1.0)
                        ],
                        p=0.1)
                ],
                bbox_params=dict(
                    type='BboxParams',
                    format='pascal_voc',
                    label_fields=['gt_labels'],
                    min_visibility=0.0,
                    filter_lost_elements=True),
                keymap=dict(img='image', gt_bboxes='bboxes'),
                update_pad_shape=False,
                skip_img_without_anno=True),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='/opt/ml/detection/dataset/cv_val_1.json',
        img_prefix='/opt/ml/detection/dataset/',
        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',
                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1024, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='/opt/ml/detection/dataset/test.json',
        img_prefix='/opt/ml/detection/dataset/',
        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',
                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1024, 1024),
                flip=True,
                flip_direction=['horizontal', 'vertical', 'diagonal'],
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(
    type='AdamW',
    lr=0.0001,
    betas=(0.9, 0.999),
    weight_decay=0.05,
    paramwise_cfg=dict(
        custom_keys=dict(
            absolute_pos_embed=dict(decay_mult=0.0),
            relative_position_bias_table=dict(decay_mult=0.0),
            norm=dict(decay_mult=0.0))))
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[16, 22])
runner = dict(type='EpochBasedRunner', max_epochs=36)
checkpoint_config = dict(interval=1)
log_config = dict(
    interval=100,
    hooks=[
        dict(type='TextLoggerHook', interval=100),
        dict(
            type='WandbLoggerHook',
            interval=100,
            init_kwargs=dict(
                project='objectdetection', name='dynamic_head_ATSS_f5'))
    ])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1), ('val', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
pretrained = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'
model = dict(
    type='ATSS',
    backbone=dict(
        type='SwinTransformer',
        embed_dims=96,
        depths=[2, 2, 6, 2],
        num_heads=[3, 6, 12, 24],
        window_size=7,
        mlp_ratio=4,
        qkv_bias=True,
        qk_scale=None,
        drop_rate=0.0,
        attn_drop_rate=0.0,
        drop_path_rate=0.2,
        patch_norm=True,
        out_indices=(0, 1, 2, 3),
        with_cp=False,
        convert_weights=True,
        init_cfg=dict(
            type='Pretrained',
            checkpoint=
            'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'
        )),
    neck=[
        dict(
            type='FPN',
            in_channels=[96, 192, 384, 768],
            out_channels=256,
            start_level=1,
            add_extra_convs='on_output',
            num_outs=5),
        dict(
            type='DyHead',
            in_channels=256,
            out_channels=256,
            num_blocks=6,
            zero_init_offset=False)
    ],
    bbox_head=dict(
        type='ATSSHead',
        num_classes=10,
        in_channels=256,
        pred_kernel_size=1,
        stacked_convs=0,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            ratios=[1.0],
            octave_base_scale=8,
            scales_per_octave=1,
            strides=[8, 16, 32, 64, 128],
            center_offset=0.5),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[0.1, 0.1, 0.2, 0.2]),
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=1.0),
        loss_bbox=dict(type='GIoULoss', loss_weight=2.0),
        loss_centerness=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0)),
    train_cfg=dict(
        assigner=dict(type='ATSSAssigner', topk=9),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    test_cfg=dict(
        nms_pre=1000,
        min_bbox_size=0,
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.6),
        max_per_img=100))
work_dir = './work_dirs/dynamic/swinT'
auto_resume = False
gpu_ids = [0]

2022-04-05 19:44:59,134 - mmdet - INFO - Set random seed to 2022, deterministic: False
2022-04-05 19:44:59,763 - mmdet - INFO - load checkpoint from http path: https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth
2022-04-05 19:44:59,890 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2022-04-05 19:44:59,932 - mmdet - INFO - initialize ATSSHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01, 'override': {'type': 'Normal', 'name': 'atss_cls', 'std': 0.01, 'bias_prob': 0.01}}
Name of parameter - Initialization information

backbone.patch_embed.projection.weight - torch.Size([96, 3, 4, 4]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.patch_embed.projection.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.patch_embed.norm.weight - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.patch_embed.norm.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.norm1.weight - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.norm1.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.attn.w_msa.relative_position_bias_table - torch.Size([169, 3]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.attn.w_msa.qkv.weight - torch.Size([288, 96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.attn.w_msa.qkv.bias - torch.Size([288]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.attn.w_msa.proj.weight - torch.Size([96, 96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.attn.w_msa.proj.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.norm2.weight - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.norm2.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.ffn.layers.0.0.weight - torch.Size([384, 96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.ffn.layers.0.0.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.ffn.layers.1.weight - torch.Size([96, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.0.ffn.layers.1.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.norm1.weight - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.norm1.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.attn.w_msa.relative_position_bias_table - torch.Size([169, 3]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.attn.w_msa.qkv.weight - torch.Size([288, 96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.attn.w_msa.qkv.bias - torch.Size([288]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.attn.w_msa.proj.weight - torch.Size([96, 96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.attn.w_msa.proj.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.norm2.weight - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.norm2.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.ffn.layers.0.0.weight - torch.Size([384, 96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.ffn.layers.0.0.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.ffn.layers.1.weight - torch.Size([96, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.blocks.1.ffn.layers.1.bias - torch.Size([96]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.downsample.norm.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.downsample.norm.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.0.downsample.reduction.weight - torch.Size([192, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.norm1.weight - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.norm1.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.attn.w_msa.relative_position_bias_table - torch.Size([169, 6]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.attn.w_msa.qkv.weight - torch.Size([576, 192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.attn.w_msa.qkv.bias - torch.Size([576]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.attn.w_msa.proj.weight - torch.Size([192, 192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.attn.w_msa.proj.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.norm2.weight - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.norm2.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.ffn.layers.0.0.weight - torch.Size([768, 192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.ffn.layers.0.0.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.ffn.layers.1.weight - torch.Size([192, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.0.ffn.layers.1.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.norm1.weight - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.norm1.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.attn.w_msa.relative_position_bias_table - torch.Size([169, 6]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.attn.w_msa.qkv.weight - torch.Size([576, 192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.attn.w_msa.qkv.bias - torch.Size([576]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.attn.w_msa.proj.weight - torch.Size([192, 192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.attn.w_msa.proj.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.norm2.weight - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.norm2.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.ffn.layers.0.0.weight - torch.Size([768, 192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.ffn.layers.0.0.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.ffn.layers.1.weight - torch.Size([192, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.blocks.1.ffn.layers.1.bias - torch.Size([192]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.downsample.norm.weight - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.downsample.norm.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.1.downsample.reduction.weight - torch.Size([384, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.norm1.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.norm1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.attn.w_msa.relative_position_bias_table - torch.Size([169, 12]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.attn.w_msa.qkv.weight - torch.Size([1152, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.attn.w_msa.qkv.bias - torch.Size([1152]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.attn.w_msa.proj.weight - torch.Size([384, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.attn.w_msa.proj.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.norm2.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.norm2.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.ffn.layers.0.0.weight - torch.Size([1536, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.ffn.layers.0.0.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.ffn.layers.1.weight - torch.Size([384, 1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.0.ffn.layers.1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.norm1.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.norm1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.attn.w_msa.relative_position_bias_table - torch.Size([169, 12]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.attn.w_msa.qkv.weight - torch.Size([1152, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.attn.w_msa.qkv.bias - torch.Size([1152]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.attn.w_msa.proj.weight - torch.Size([384, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.attn.w_msa.proj.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.norm2.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.norm2.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.ffn.layers.0.0.weight - torch.Size([1536, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.ffn.layers.0.0.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.ffn.layers.1.weight - torch.Size([384, 1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.1.ffn.layers.1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.norm1.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.norm1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.attn.w_msa.relative_position_bias_table - torch.Size([169, 12]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.attn.w_msa.qkv.weight - torch.Size([1152, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.attn.w_msa.qkv.bias - torch.Size([1152]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.attn.w_msa.proj.weight - torch.Size([384, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.attn.w_msa.proj.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.norm2.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.norm2.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.ffn.layers.0.0.weight - torch.Size([1536, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.ffn.layers.0.0.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.ffn.layers.1.weight - torch.Size([384, 1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.2.ffn.layers.1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.norm1.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.norm1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.attn.w_msa.relative_position_bias_table - torch.Size([169, 12]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.attn.w_msa.qkv.weight - torch.Size([1152, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.attn.w_msa.qkv.bias - torch.Size([1152]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.attn.w_msa.proj.weight - torch.Size([384, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.attn.w_msa.proj.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.norm2.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.norm2.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.ffn.layers.0.0.weight - torch.Size([1536, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.ffn.layers.0.0.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.ffn.layers.1.weight - torch.Size([384, 1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.3.ffn.layers.1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.norm1.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.norm1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.attn.w_msa.relative_position_bias_table - torch.Size([169, 12]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.attn.w_msa.qkv.weight - torch.Size([1152, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.attn.w_msa.qkv.bias - torch.Size([1152]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.attn.w_msa.proj.weight - torch.Size([384, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.attn.w_msa.proj.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.norm2.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.norm2.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.ffn.layers.0.0.weight - torch.Size([1536, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.ffn.layers.0.0.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.ffn.layers.1.weight - torch.Size([384, 1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.4.ffn.layers.1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.norm1.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.norm1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.attn.w_msa.relative_position_bias_table - torch.Size([169, 12]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.attn.w_msa.qkv.weight - torch.Size([1152, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.attn.w_msa.qkv.bias - torch.Size([1152]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.attn.w_msa.proj.weight - torch.Size([384, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.attn.w_msa.proj.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.norm2.weight - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.norm2.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.ffn.layers.0.0.weight - torch.Size([1536, 384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.ffn.layers.0.0.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.ffn.layers.1.weight - torch.Size([384, 1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.blocks.5.ffn.layers.1.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.downsample.norm.weight - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.downsample.norm.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.2.downsample.reduction.weight - torch.Size([768, 1536]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.norm1.weight - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.norm1.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.attn.w_msa.relative_position_bias_table - torch.Size([169, 24]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.attn.w_msa.qkv.weight - torch.Size([2304, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.attn.w_msa.qkv.bias - torch.Size([2304]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.attn.w_msa.proj.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.attn.w_msa.proj.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.norm2.weight - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.norm2.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.ffn.layers.0.0.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.ffn.layers.0.0.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.ffn.layers.1.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.0.ffn.layers.1.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.norm1.weight - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.norm1.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.attn.w_msa.relative_position_bias_table - torch.Size([169, 24]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.attn.w_msa.qkv.weight - torch.Size([2304, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.attn.w_msa.qkv.bias - torch.Size([2304]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.attn.w_msa.proj.weight - torch.Size([768, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.attn.w_msa.proj.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.norm2.weight - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.norm2.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.ffn.layers.0.0.weight - torch.Size([3072, 768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.ffn.layers.0.0.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.ffn.layers.1.weight - torch.Size([768, 3072]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.stages.3.blocks.1.ffn.layers.1.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in SwinTransformer  

backbone.norm0.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of ATSS  

backbone.norm0.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of ATSS  

backbone.norm1.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ATSS  

backbone.norm1.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of ATSS  

backbone.norm2.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ATSS  

backbone.norm2.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of ATSS  

backbone.norm3.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of ATSS  

backbone.norm3.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.0.lateral_convs.0.conv.weight - torch.Size([256, 192, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.0.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.0.lateral_convs.1.conv.weight - torch.Size([256, 384, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.0.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.0.lateral_convs.2.conv.weight - torch.Size([256, 768, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.0.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.0.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.0.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.0.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.0.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.0.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.0.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.0.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.0.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.0.fpn_convs.4.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.0.fpn_convs.4.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.spatial_conv_high.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.spatial_conv_high.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.spatial_conv_high.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.spatial_conv_mid.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.spatial_conv_mid.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.spatial_conv_mid.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.spatial_conv_low.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.spatial_conv_low.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.spatial_conv_low.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.spatial_conv_offset.weight - torch.Size([27, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.spatial_conv_offset.bias - torch.Size([27]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.scale_attn_module.1.weight - torch.Size([1, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.scale_attn_module.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.task_attn_module.conv1.conv.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.task_attn_module.conv1.conv.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.task_attn_module.conv2.conv.weight - torch.Size([1024, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.0.task_attn_module.conv2.conv.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.spatial_conv_high.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.spatial_conv_high.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.spatial_conv_high.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.spatial_conv_mid.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.spatial_conv_mid.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.spatial_conv_mid.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.spatial_conv_low.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.spatial_conv_low.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.spatial_conv_low.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.spatial_conv_offset.weight - torch.Size([27, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.spatial_conv_offset.bias - torch.Size([27]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.scale_attn_module.1.weight - torch.Size([1, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.scale_attn_module.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.task_attn_module.conv1.conv.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.task_attn_module.conv1.conv.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.task_attn_module.conv2.conv.weight - torch.Size([1024, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.1.task_attn_module.conv2.conv.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.spatial_conv_high.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.spatial_conv_high.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.spatial_conv_high.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.spatial_conv_mid.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.spatial_conv_mid.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.spatial_conv_mid.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.spatial_conv_low.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.spatial_conv_low.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.spatial_conv_low.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.spatial_conv_offset.weight - torch.Size([27, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.spatial_conv_offset.bias - torch.Size([27]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.scale_attn_module.1.weight - torch.Size([1, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.scale_attn_module.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.task_attn_module.conv1.conv.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.task_attn_module.conv1.conv.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.task_attn_module.conv2.conv.weight - torch.Size([1024, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.2.task_attn_module.conv2.conv.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.spatial_conv_high.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.spatial_conv_high.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.spatial_conv_high.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.spatial_conv_mid.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.spatial_conv_mid.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.spatial_conv_mid.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.spatial_conv_low.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.spatial_conv_low.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.spatial_conv_low.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.spatial_conv_offset.weight - torch.Size([27, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.spatial_conv_offset.bias - torch.Size([27]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.scale_attn_module.1.weight - torch.Size([1, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.scale_attn_module.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.task_attn_module.conv1.conv.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.task_attn_module.conv1.conv.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.task_attn_module.conv2.conv.weight - torch.Size([1024, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.3.task_attn_module.conv2.conv.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.spatial_conv_high.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.spatial_conv_high.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.spatial_conv_high.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.spatial_conv_mid.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.spatial_conv_mid.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.spatial_conv_mid.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.spatial_conv_low.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.spatial_conv_low.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.spatial_conv_low.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.spatial_conv_offset.weight - torch.Size([27, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.spatial_conv_offset.bias - torch.Size([27]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.scale_attn_module.1.weight - torch.Size([1, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.scale_attn_module.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.task_attn_module.conv1.conv.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.task_attn_module.conv1.conv.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.task_attn_module.conv2.conv.weight - torch.Size([1024, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.4.task_attn_module.conv2.conv.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.spatial_conv_high.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.spatial_conv_high.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.spatial_conv_high.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.spatial_conv_mid.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.spatial_conv_mid.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.spatial_conv_mid.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.spatial_conv_low.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.spatial_conv_low.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.spatial_conv_low.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.spatial_conv_offset.weight - torch.Size([27, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.spatial_conv_offset.bias - torch.Size([27]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.scale_attn_module.1.weight - torch.Size([1, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.scale_attn_module.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.task_attn_module.conv1.conv.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.task_attn_module.conv1.conv.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.task_attn_module.conv2.conv.weight - torch.Size([1024, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of ATSS  

neck.1.dyhead_blocks.5.task_attn_module.conv2.conv.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ATSS  

bbox_head.atss_cls.weight - torch.Size([10, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=-4.59511985013459 

bbox_head.atss_cls.bias - torch.Size([10]): 
NormalInit: mean=0, std=0.01, bias=-4.59511985013459 

bbox_head.atss_reg.weight - torch.Size([4, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.atss_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.atss_centerness.weight - torch.Size([1, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.atss_centerness.bias - torch.Size([1]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.scales.0.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of ATSS  

bbox_head.scales.1.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of ATSS  

bbox_head.scales.2.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of ATSS  

bbox_head.scales.3.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of ATSS  

bbox_head.scales.4.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of ATSS  
2022-04-05 19:45:03,893 - mmdet - INFO - Start running, host: root@71b0d7392d91, work_dir: /opt/ml/detection/baseline/mmdetection/work_dirs/dynamic/swinT
2022-04-05 19:45:03,893 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) WandbLoggerHook                    
 -------------------- 
2022-04-05 19:45:03,894 - mmdet - INFO - workflow: [('train', 1), ('val', 1)], max: 36 epochs
2022-04-05 19:45:03,894 - mmdet - INFO - Checkpoints will be saved to /opt/ml/detection/baseline/mmdetection/work_dirs/dynamic/swinT by HardDiskBackend.
2022-04-05 19:50:23,020 - mmdet - INFO - Epoch [1][100/280]	lr: 1.988e-05, eta: 8:40:13, time: 3.128, data_time: 0.057, memory: 28242, loss_cls: 1.0581, loss_bbox: 1.0528, loss_centerness: 0.6559, loss: 2.7668
2022-04-05 19:55:31,698 - mmdet - INFO - Epoch [1][200/280]	lr: 3.986e-05, eta: 8:31:38, time: 3.087, data_time: 0.023, memory: 28242, loss_cls: 0.7706, loss_bbox: 1.0134, loss_centerness: 0.6379, loss: 2.4219
2022-04-05 19:59:38,944 - mmdet - INFO - Saving checkpoint at 1 epochs
2022-04-05 20:01:45,704 - mmdet - INFO - Evaluating bbox...
2022-04-05 20:01:55,529 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.019
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.049
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.009
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.004
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.024
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.174
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.174
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.174
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.014
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.223

2022-04-05 20:01:55,692 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 20:01:55,692 - mmdet - INFO - Epoch(val) [1][975]	bbox_mAP: 0.0190, bbox_mAP_50: 0.0490, bbox_mAP_75: 0.0090, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.0040, bbox_mAP_l: 0.0240, bbox_mAP_copypaste: 0.019 0.049 0.009 0.000 0.004 0.024
2022-04-05 20:02:50,495 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 20:02:50,495 - mmdet - INFO - Epoch(val) [1][70]	loss_cls: 0.5460, loss_bbox: 0.8786, loss_centerness: 0.6323, loss: 2.0569
2022-04-05 20:08:02,615 - mmdet - INFO - Epoch [2][100/280]	lr: 7.582e-05, eta: 6:37:09, time: 3.121, data_time: 0.057, memory: 28242, loss_cls: 0.5607, loss_bbox: 0.8224, loss_centerness: 0.6305, loss: 2.0136
2022-04-05 20:13:11,048 - mmdet - INFO - Epoch [2][200/280]	lr: 9.580e-05, eta: 6:53:59, time: 3.084, data_time: 0.024, memory: 28242, loss_cls: 0.5303, loss_bbox: 0.7433, loss_centerness: 0.6274, loss: 1.9009
2022-04-05 20:17:17,873 - mmdet - INFO - Saving checkpoint at 2 epochs
2022-04-05 20:19:25,253 - mmdet - INFO - Evaluating bbox...
2022-04-05 20:19:35,207 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.047
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.101
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.039
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.007
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.010
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.059
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.296
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.296
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.296
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.007
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.093
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.354

2022-04-05 20:19:35,363 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 20:19:35,363 - mmdet - INFO - Epoch(val) [2][975]	bbox_mAP: 0.0470, bbox_mAP_50: 0.1010, bbox_mAP_75: 0.0390, bbox_mAP_s: 0.0070, bbox_mAP_m: 0.0100, bbox_mAP_l: 0.0590, bbox_mAP_copypaste: 0.047 0.101 0.039 0.007 0.010 0.059
2022-04-05 20:20:30,441 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 20:20:30,441 - mmdet - INFO - Epoch(val) [2][70]	loss_cls: 0.4951, loss_bbox: 0.6816, loss_centerness: 0.6263, loss: 1.8029
2022-04-05 20:25:43,094 - mmdet - INFO - Epoch [3][100/280]	lr: 1.000e-04, eta: 6:09:48, time: 3.126, data_time: 0.059, memory: 28242, loss_cls: 0.4949, loss_bbox: 0.6671, loss_centerness: 0.6245, loss: 1.7865
2022-04-05 20:30:52,112 - mmdet - INFO - Epoch [3][200/280]	lr: 1.000e-04, eta: 6:20:53, time: 3.090, data_time: 0.024, memory: 28242, loss_cls: 0.4798, loss_bbox: 0.6551, loss_centerness: 0.6239, loss: 1.7589
2022-04-05 20:34:59,271 - mmdet - INFO - Saving checkpoint at 3 epochs
2022-04-05 20:37:06,183 - mmdet - INFO - Evaluating bbox...
2022-04-05 20:37:16,227 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.094
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.167
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.097
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.004
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.018
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.116
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.404
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.404
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.404
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.010
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.151
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.472

2022-04-05 20:37:16,395 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 20:37:16,396 - mmdet - INFO - Epoch(val) [3][975]	bbox_mAP: 0.0940, bbox_mAP_50: 0.1670, bbox_mAP_75: 0.0970, bbox_mAP_s: 0.0040, bbox_mAP_m: 0.0180, bbox_mAP_l: 0.1160, bbox_mAP_copypaste: 0.094 0.167 0.097 0.004 0.018 0.116
2022-04-05 20:38:11,348 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 20:38:11,349 - mmdet - INFO - Epoch(val) [3][70]	loss_cls: 0.4496, loss_bbox: 0.5920, loss_centerness: 0.6222, loss: 1.6638
2022-04-05 20:43:23,574 - mmdet - INFO - Epoch [4][100/280]	lr: 1.000e-04, eta: 5:52:36, time: 3.122, data_time: 0.057, memory: 28242, loss_cls: 0.4577, loss_bbox: 0.5921, loss_centerness: 0.6214, loss: 1.6712
2022-04-05 20:48:32,536 - mmdet - INFO - Epoch [4][200/280]	lr: 1.000e-04, eta: 5:59:58, time: 3.090, data_time: 0.025, memory: 28242, loss_cls: 0.4509, loss_bbox: 0.5806, loss_centerness: 0.6201, loss: 1.6516
2022-04-05 20:52:39,571 - mmdet - INFO - Saving checkpoint at 4 epochs
2022-04-05 20:54:46,140 - mmdet - INFO - Evaluating bbox...
2022-04-05 20:54:55,968 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.113
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.192
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.121
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.013
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.029
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.139
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.469
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.469
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.469
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.021
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.238
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.538

2022-04-05 20:54:56,135 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 20:54:56,136 - mmdet - INFO - Epoch(val) [4][975]	bbox_mAP: 0.1130, bbox_mAP_50: 0.1920, bbox_mAP_75: 0.1210, bbox_mAP_s: 0.0130, bbox_mAP_m: 0.0290, bbox_mAP_l: 0.1390, bbox_mAP_copypaste: 0.113 0.192 0.121 0.013 0.029 0.139
2022-04-05 20:55:50,990 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 20:55:50,991 - mmdet - INFO - Epoch(val) [4][70]	loss_cls: 0.4351, loss_bbox: 0.5596, loss_centerness: 0.6187, loss: 1.6135
2022-04-05 21:01:02,772 - mmdet - INFO - Epoch [5][100/280]	lr: 1.000e-04, eta: 5:38:29, time: 3.118, data_time: 0.057, memory: 28242, loss_cls: 0.4236, loss_bbox: 0.5474, loss_centerness: 0.6181, loss: 1.5890
2022-04-05 21:06:11,188 - mmdet - INFO - Epoch [5][200/280]	lr: 1.000e-04, eta: 5:43:25, time: 3.084, data_time: 0.024, memory: 28242, loss_cls: 0.4228, loss_bbox: 0.5424, loss_centerness: 0.6175, loss: 1.5827
2022-04-05 21:10:17,981 - mmdet - INFO - Saving checkpoint at 5 epochs
2022-04-05 21:12:23,418 - mmdet - INFO - Evaluating bbox...
2022-04-05 21:12:33,134 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.137
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.216
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.151
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.010
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.043
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.168
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.477
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.477
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.477
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.020
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.218
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.552

2022-04-05 21:12:33,279 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 21:12:33,279 - mmdet - INFO - Epoch(val) [5][975]	bbox_mAP: 0.1370, bbox_mAP_50: 0.2160, bbox_mAP_75: 0.1510, bbox_mAP_s: 0.0100, bbox_mAP_m: 0.0430, bbox_mAP_l: 0.1680, bbox_mAP_copypaste: 0.137 0.216 0.151 0.010 0.043 0.168
2022-04-05 21:13:28,379 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 21:13:28,380 - mmdet - INFO - Epoch(val) [5][70]	loss_cls: 0.4297, loss_bbox: 0.5265, loss_centerness: 0.6176, loss: 1.5738
2022-04-05 21:18:41,088 - mmdet - INFO - Epoch [6][100/280]	lr: 1.000e-04, eta: 5:25:48, time: 3.127, data_time: 0.058, memory: 28242, loss_cls: 0.4104, loss_bbox: 0.5230, loss_centerness: 0.6163, loss: 1.5497
2022-04-05 21:23:49,476 - mmdet - INFO - Epoch [6][200/280]	lr: 1.000e-04, eta: 5:29:07, time: 3.084, data_time: 0.025, memory: 28242, loss_cls: 0.4112, loss_bbox: 0.5202, loss_centerness: 0.6163, loss: 1.5477
2022-04-05 21:27:56,004 - mmdet - INFO - Saving checkpoint at 6 epochs
2022-04-05 21:30:01,579 - mmdet - INFO - Evaluating bbox...
2022-04-05 21:30:11,074 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.147
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.228
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.159
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.011
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.044
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.178
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.505
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.505
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.505
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.034
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.264
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.575

2022-04-05 21:30:11,232 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 21:30:11,232 - mmdet - INFO - Epoch(val) [6][975]	bbox_mAP: 0.1470, bbox_mAP_50: 0.2280, bbox_mAP_75: 0.1590, bbox_mAP_s: 0.0110, bbox_mAP_m: 0.0440, bbox_mAP_l: 0.1780, bbox_mAP_copypaste: 0.147 0.228 0.159 0.011 0.044 0.178
2022-04-05 21:31:06,045 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 21:31:06,045 - mmdet - INFO - Epoch(val) [6][70]	loss_cls: 0.4212, loss_bbox: 0.5141, loss_centerness: 0.6163, loss: 1.5516
2022-04-05 21:36:17,504 - mmdet - INFO - Epoch [7][100/280]	lr: 1.000e-04, eta: 5:13:46, time: 3.114, data_time: 0.057, memory: 28242, loss_cls: 0.4130, loss_bbox: 0.5157, loss_centerness: 0.6166, loss: 1.5453
2022-04-05 21:41:25,661 - mmdet - INFO - Epoch [7][200/280]	lr: 1.000e-04, eta: 5:15:54, time: 3.082, data_time: 0.024, memory: 28242, loss_cls: 0.4026, loss_bbox: 0.4962, loss_centerness: 0.6130, loss: 1.5118
2022-04-05 21:45:32,311 - mmdet - INFO - Saving checkpoint at 7 epochs
2022-04-05 21:47:37,425 - mmdet - INFO - Evaluating bbox...
2022-04-05 21:47:46,966 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.164
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.257
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.178
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.004
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.045
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.201
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.523
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.523
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.523
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.047
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.305
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.587

2022-04-05 21:47:47,128 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 21:47:47,128 - mmdet - INFO - Epoch(val) [7][975]	bbox_mAP: 0.1640, bbox_mAP_50: 0.2570, bbox_mAP_75: 0.1780, bbox_mAP_s: 0.0040, bbox_mAP_m: 0.0450, bbox_mAP_l: 0.2010, bbox_mAP_copypaste: 0.164 0.257 0.178 0.004 0.045 0.201
2022-04-05 21:48:41,934 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 21:48:41,934 - mmdet - INFO - Epoch(val) [7][70]	loss_cls: 0.4080, loss_bbox: 0.5066, loss_centerness: 0.6163, loss: 1.5309
2022-04-05 21:53:53,308 - mmdet - INFO - Epoch [8][100/280]	lr: 1.000e-04, eta: 5:02:10, time: 3.114, data_time: 0.057, memory: 28242, loss_cls: 0.3858, loss_bbox: 0.4838, loss_centerness: 0.6128, loss: 1.4825
2022-04-05 21:59:01,260 - mmdet - INFO - Epoch [8][200/280]	lr: 1.000e-04, eta: 5:03:24, time: 3.079, data_time: 0.024, memory: 28242, loss_cls: 0.3909, loss_bbox: 0.4929, loss_centerness: 0.6151, loss: 1.4988
2022-04-05 22:03:07,726 - mmdet - INFO - Saving checkpoint at 8 epochs
2022-04-05 22:05:14,591 - mmdet - INFO - Evaluating bbox...
2022-04-05 22:05:24,444 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.187
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.281
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.203
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.008
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.065
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.228
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.527
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.527
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.527
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.034
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.242
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.607

2022-04-05 22:05:24,594 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 22:05:24,594 - mmdet - INFO - Epoch(val) [8][975]	bbox_mAP: 0.1870, bbox_mAP_50: 0.2810, bbox_mAP_75: 0.2030, bbox_mAP_s: 0.0080, bbox_mAP_m: 0.0650, bbox_mAP_l: 0.2280, bbox_mAP_copypaste: 0.187 0.281 0.203 0.008 0.065 0.228
2022-04-05 22:06:19,411 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 22:06:19,412 - mmdet - INFO - Epoch(val) [8][70]	loss_cls: 0.3961, loss_bbox: 0.4892, loss_centerness: 0.6150, loss: 1.5003
2022-04-05 22:11:31,059 - mmdet - INFO - Epoch [9][100/280]	lr: 1.000e-04, eta: 4:50:53, time: 3.116, data_time: 0.057, memory: 28242, loss_cls: 0.3750, loss_bbox: 0.4788, loss_centerness: 0.6133, loss: 1.4671
2022-04-05 22:16:39,250 - mmdet - INFO - Epoch [9][200/280]	lr: 1.000e-04, eta: 4:51:26, time: 3.082, data_time: 0.024, memory: 28242, loss_cls: 0.3721, loss_bbox: 0.4638, loss_centerness: 0.6126, loss: 1.4485
2022-04-05 22:20:45,921 - mmdet - INFO - Saving checkpoint at 9 epochs
2022-04-05 22:22:55,780 - mmdet - INFO - Evaluating bbox...
2022-04-05 22:23:05,408 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.216
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.324
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.237
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.006
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.071
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.256
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.542
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.542
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.542
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.027
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.312
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.611

2022-04-05 22:23:05,569 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 22:23:05,569 - mmdet - INFO - Epoch(val) [9][975]	bbox_mAP: 0.2160, bbox_mAP_50: 0.3240, bbox_mAP_75: 0.2370, bbox_mAP_s: 0.0060, bbox_mAP_m: 0.0710, bbox_mAP_l: 0.2560, bbox_mAP_copypaste: 0.216 0.324 0.237 0.006 0.071 0.256
2022-04-05 22:24:00,442 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 22:24:00,442 - mmdet - INFO - Epoch(val) [9][70]	loss_cls: 0.3994, loss_bbox: 0.4809, loss_centerness: 0.6153, loss: 1.4956
2022-04-05 22:29:12,079 - mmdet - INFO - Epoch [10][100/280]	lr: 1.000e-04, eta: 4:39:48, time: 3.116, data_time: 0.058, memory: 28242, loss_cls: 0.3625, loss_bbox: 0.4545, loss_centerness: 0.6124, loss: 1.4294
2022-04-05 22:34:20,114 - mmdet - INFO - Epoch [10][200/280]	lr: 1.000e-04, eta: 4:39:48, time: 3.080, data_time: 0.024, memory: 28242, loss_cls: 0.3746, loss_bbox: 0.4577, loss_centerness: 0.6116, loss: 1.4439
2022-04-05 22:38:26,840 - mmdet - INFO - Saving checkpoint at 10 epochs
2022-04-05 22:40:32,490 - mmdet - INFO - Evaluating bbox...
2022-04-05 22:40:42,026 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.216
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.321
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.230
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.006
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.068
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.259
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.564
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.564
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.564
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.041
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.317
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.634

2022-04-05 22:40:42,180 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 22:40:42,180 - mmdet - INFO - Epoch(val) [10][975]	bbox_mAP: 0.2160, bbox_mAP_50: 0.3210, bbox_mAP_75: 0.2300, bbox_mAP_s: 0.0060, bbox_mAP_m: 0.0680, bbox_mAP_l: 0.2590, bbox_mAP_copypaste: 0.216 0.321 0.230 0.006 0.068 0.259
2022-04-05 22:41:37,072 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 22:41:37,072 - mmdet - INFO - Epoch(val) [10][70]	loss_cls: 0.3891, loss_bbox: 0.4658, loss_centerness: 0.6125, loss: 1.4675
2022-04-05 22:46:48,414 - mmdet - INFO - Epoch [11][100/280]	lr: 1.000e-04, eta: 4:28:51, time: 3.113, data_time: 0.057, memory: 28242, loss_cls: 0.3533, loss_bbox: 0.4365, loss_centerness: 0.6100, loss: 1.3999
2022-04-05 22:51:56,872 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 22:51:56,872 - mmdet - INFO - Epoch [11][200/280]	lr: 1.000e-04, eta: 4:28:24, time: 3.084, data_time: 0.025, memory: 28242, loss_cls: 0.3614, loss_bbox: 0.4390, loss_centerness: 0.6113, loss: 1.4116
2022-04-05 22:56:03,554 - mmdet - INFO - Saving checkpoint at 11 epochs
2022-04-05 22:58:08,310 - mmdet - INFO - Evaluating bbox...
2022-04-05 22:58:17,688 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.272
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.392
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.302
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.009
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.108
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.321
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.574
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.574
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.574
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.045
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.349
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.641

2022-04-05 22:58:17,846 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 22:58:17,846 - mmdet - INFO - Epoch(val) [11][975]	bbox_mAP: 0.2720, bbox_mAP_50: 0.3920, bbox_mAP_75: 0.3020, bbox_mAP_s: 0.0090, bbox_mAP_m: 0.1080, bbox_mAP_l: 0.3210, bbox_mAP_copypaste: 0.272 0.392 0.302 0.009 0.108 0.321
2022-04-05 22:59:12,554 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 22:59:12,555 - mmdet - INFO - Epoch(val) [11][70]	loss_cls: 0.3784, loss_bbox: 0.4564, loss_centerness: 0.6113, loss: 1.4460
2022-04-05 23:04:24,507 - mmdet - INFO - Epoch [12][100/280]	lr: 1.000e-04, eta: 4:18:03, time: 3.119, data_time: 0.058, memory: 28242, loss_cls: 0.3495, loss_bbox: 0.4337, loss_centerness: 0.6089, loss: 1.3920
2022-04-05 23:09:33,205 - mmdet - INFO - Epoch [12][200/280]	lr: 1.000e-04, eta: 4:17:14, time: 3.087, data_time: 0.025, memory: 28242, loss_cls: 0.3466, loss_bbox: 0.4303, loss_centerness: 0.6101, loss: 1.3870
2022-04-05 23:13:39,971 - mmdet - INFO - Saving checkpoint at 12 epochs
2022-04-05 23:15:45,403 - mmdet - INFO - Evaluating bbox...
2022-04-05 23:15:55,185 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.278
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.412
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.309
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.024
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.119
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.326
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.553
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.553
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.553
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.062
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.334
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.617

2022-04-05 23:15:55,324 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 23:15:55,325 - mmdet - INFO - Epoch(val) [12][975]	bbox_mAP: 0.2780, bbox_mAP_50: 0.4120, bbox_mAP_75: 0.3090, bbox_mAP_s: 0.0240, bbox_mAP_m: 0.1190, bbox_mAP_l: 0.3260, bbox_mAP_copypaste: 0.278 0.412 0.309 0.024 0.119 0.326
2022-04-05 23:16:50,012 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 23:16:50,012 - mmdet - INFO - Epoch(val) [12][70]	loss_cls: 0.3745, loss_bbox: 0.4794, loss_centerness: 0.6147, loss: 1.4686
2022-04-05 23:22:01,749 - mmdet - INFO - Epoch [13][100/280]	lr: 1.000e-04, eta: 4:07:20, time: 3.117, data_time: 0.058, memory: 28242, loss_cls: 0.3402, loss_bbox: 0.4295, loss_centerness: 0.6096, loss: 1.3794
2022-04-05 23:27:09,963 - mmdet - INFO - Epoch [13][200/280]	lr: 1.000e-04, eta: 4:06:10, time: 3.082, data_time: 0.024, memory: 28242, loss_cls: 0.3481, loss_bbox: 0.4303, loss_centerness: 0.6109, loss: 1.3892
2022-04-05 23:31:16,686 - mmdet - INFO - Saving checkpoint at 13 epochs
2022-04-05 23:33:22,650 - mmdet - INFO - Evaluating bbox...
2022-04-05 23:33:32,307 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.317
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.446
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.346
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.017
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.107
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.374
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.581
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.581
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.581
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.064
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.311
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.656

2022-04-05 23:33:32,448 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 23:33:32,448 - mmdet - INFO - Epoch(val) [13][975]	bbox_mAP: 0.3170, bbox_mAP_50: 0.4460, bbox_mAP_75: 0.3460, bbox_mAP_s: 0.0170, bbox_mAP_m: 0.1070, bbox_mAP_l: 0.3740, bbox_mAP_copypaste: 0.317 0.446 0.346 0.017 0.107 0.374
2022-04-05 23:34:27,281 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 23:34:27,281 - mmdet - INFO - Epoch(val) [13][70]	loss_cls: 0.3684, loss_bbox: 0.4545, loss_centerness: 0.6126, loss: 1.4354
2022-04-05 23:39:38,869 - mmdet - INFO - Epoch [14][100/280]	lr: 1.000e-04, eta: 3:56:39, time: 3.116, data_time: 0.058, memory: 28242, loss_cls: 0.3306, loss_bbox: 0.4145, loss_centerness: 0.6094, loss: 1.3546
2022-04-05 23:44:46,953 - mmdet - INFO - Epoch [14][200/280]	lr: 1.000e-04, eta: 3:55:11, time: 3.081, data_time: 0.024, memory: 28242, loss_cls: 0.3340, loss_bbox: 0.4179, loss_centerness: 0.6085, loss: 1.3604
2022-04-05 23:48:53,497 - mmdet - INFO - Saving checkpoint at 14 epochs
2022-04-05 23:50:58,319 - mmdet - INFO - Evaluating bbox...
2022-04-05 23:51:06,771 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.328
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.461
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.366
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.006
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.118
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.385
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.583
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.583
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.583
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.069
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.301
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.658

2022-04-05 23:51:06,898 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 23:51:06,899 - mmdet - INFO - Epoch(val) [14][975]	bbox_mAP: 0.3280, bbox_mAP_50: 0.4610, bbox_mAP_75: 0.3660, bbox_mAP_s: 0.0060, bbox_mAP_m: 0.1180, bbox_mAP_l: 0.3850, bbox_mAP_copypaste: 0.328 0.461 0.366 0.006 0.118 0.385
2022-04-05 23:52:01,787 - mmdet - INFO - Exp name: myconfig.py
2022-04-05 23:52:01,788 - mmdet - INFO - Epoch(val) [14][70]	loss_cls: 0.3739, loss_bbox: 0.4402, loss_centerness: 0.6105, loss: 1.4245
2022-04-05 23:57:13,291 - mmdet - INFO - Epoch [15][100/280]	lr: 1.000e-04, eta: 3:46:00, time: 3.115, data_time: 0.057, memory: 28242, loss_cls: 0.3241, loss_bbox: 0.4126, loss_centerness: 0.6090, loss: 1.3457
2022-04-06 00:02:22,145 - mmdet - INFO - Epoch [15][200/280]	lr: 1.000e-04, eta: 3:44:20, time: 3.088, data_time: 0.025, memory: 28242, loss_cls: 0.3312, loss_bbox: 0.4222, loss_centerness: 0.6099, loss: 1.3633
2022-04-06 00:06:28,701 - mmdet - INFO - Saving checkpoint at 15 epochs
2022-04-06 00:08:33,468 - mmdet - INFO - Evaluating bbox...
2022-04-06 00:08:42,403 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.336
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.467
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.375
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.019
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.123
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.394
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.578
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.578
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.578
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.058
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.322
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.650

2022-04-06 00:08:42,546 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 00:08:42,546 - mmdet - INFO - Epoch(val) [15][975]	bbox_mAP: 0.3360, bbox_mAP_50: 0.4670, bbox_mAP_75: 0.3750, bbox_mAP_s: 0.0190, bbox_mAP_m: 0.1230, bbox_mAP_l: 0.3940, bbox_mAP_copypaste: 0.336 0.467 0.375 0.019 0.123 0.394
2022-04-06 00:09:37,200 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 00:09:37,201 - mmdet - INFO - Epoch(val) [15][70]	loss_cls: 0.3673, loss_bbox: 0.4477, loss_centerness: 0.6117, loss: 1.4266
2022-04-06 00:14:48,809 - mmdet - INFO - Epoch [16][100/280]	lr: 1.000e-04, eta: 3:35:25, time: 3.116, data_time: 0.058, memory: 28242, loss_cls: 0.3223, loss_bbox: 0.4064, loss_centerness: 0.6080, loss: 1.3366
2022-04-06 00:19:57,028 - mmdet - INFO - Epoch [16][200/280]	lr: 1.000e-04, eta: 3:33:31, time: 3.082, data_time: 0.025, memory: 28242, loss_cls: 0.3168, loss_bbox: 0.4046, loss_centerness: 0.6082, loss: 1.3296
2022-04-06 00:24:03,741 - mmdet - INFO - Saving checkpoint at 16 epochs
2022-04-06 00:26:09,629 - mmdet - INFO - Evaluating bbox...
2022-04-06 00:26:18,050 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.346
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.475
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.378
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.016
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.113
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.408
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.593
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.593
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.593
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.051
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.319
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.671

2022-04-06 00:26:18,185 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 00:26:18,185 - mmdet - INFO - Epoch(val) [16][975]	bbox_mAP: 0.3460, bbox_mAP_50: 0.4750, bbox_mAP_75: 0.3780, bbox_mAP_s: 0.0160, bbox_mAP_m: 0.1130, bbox_mAP_l: 0.4080, bbox_mAP_copypaste: 0.346 0.475 0.378 0.016 0.113 0.408
2022-04-06 00:27:13,091 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 00:27:13,092 - mmdet - INFO - Epoch(val) [16][70]	loss_cls: 0.3738, loss_bbox: 0.4404, loss_centerness: 0.6111, loss: 1.4253
2022-04-06 00:32:24,670 - mmdet - INFO - Epoch [17][100/280]	lr: 1.000e-05, eta: 3:24:52, time: 3.116, data_time: 0.057, memory: 28242, loss_cls: 0.2985, loss_bbox: 0.3722, loss_centerness: 0.6065, loss: 1.2771
2022-04-06 00:37:32,943 - mmdet - INFO - Epoch [17][200/280]	lr: 1.000e-05, eta: 3:22:46, time: 3.083, data_time: 0.025, memory: 28242, loss_cls: 0.2911, loss_bbox: 0.3726, loss_centerness: 0.6069, loss: 1.2706
2022-04-06 00:41:39,408 - mmdet - INFO - Saving checkpoint at 17 epochs
2022-04-06 00:43:44,450 - mmdet - INFO - Evaluating bbox...
2022-04-06 00:43:53,065 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.384
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.513
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.409
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.011
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.135
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.449
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.620
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.620
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.620
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.078
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.369
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.694

2022-04-06 00:43:53,203 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 00:43:53,203 - mmdet - INFO - Epoch(val) [17][975]	bbox_mAP: 0.3840, bbox_mAP_50: 0.5130, bbox_mAP_75: 0.4090, bbox_mAP_s: 0.0110, bbox_mAP_m: 0.1350, bbox_mAP_l: 0.4490, bbox_mAP_copypaste: 0.384 0.513 0.409 0.011 0.135 0.449
2022-04-06 00:44:48,120 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 00:44:48,121 - mmdet - INFO - Epoch(val) [17][70]	loss_cls: 0.3379, loss_bbox: 0.4040, loss_centerness: 0.6093, loss: 1.3513
2022-04-06 00:49:59,672 - mmdet - INFO - Epoch [18][100/280]	lr: 1.000e-05, eta: 3:14:19, time: 3.115, data_time: 0.057, memory: 28242, loss_cls: 0.2825, loss_bbox: 0.3566, loss_centerness: 0.6062, loss: 1.2453
2022-04-06 00:55:08,046 - mmdet - INFO - Epoch [18][200/280]	lr: 1.000e-05, eta: 3:12:04, time: 3.084, data_time: 0.024, memory: 28242, loss_cls: 0.2810, loss_bbox: 0.3529, loss_centerness: 0.6042, loss: 1.2381
2022-04-06 00:59:14,734 - mmdet - INFO - Saving checkpoint at 18 epochs
2022-04-06 01:01:19,574 - mmdet - INFO - Evaluating bbox...
2022-04-06 01:01:28,163 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.394
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.521
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.420
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.013
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.141
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.462
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.627
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.627
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.627
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.088
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.374
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.699

2022-04-06 01:01:28,284 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 01:01:28,284 - mmdet - INFO - Epoch(val) [18][975]	bbox_mAP: 0.3940, bbox_mAP_50: 0.5210, bbox_mAP_75: 0.4200, bbox_mAP_s: 0.0130, bbox_mAP_m: 0.1410, bbox_mAP_l: 0.4620, bbox_mAP_copypaste: 0.394 0.521 0.420 0.013 0.141 0.462
2022-04-06 01:02:22,951 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 01:02:22,951 - mmdet - INFO - Epoch(val) [18][70]	loss_cls: 0.3403, loss_bbox: 0.4079, loss_centerness: 0.6093, loss: 1.3575
2022-04-06 01:07:34,744 - mmdet - INFO - Epoch [19][100/280]	lr: 1.000e-05, eta: 3:03:49, time: 3.118, data_time: 0.058, memory: 28242, loss_cls: 0.2786, loss_bbox: 0.3583, loss_centerness: 0.6059, loss: 1.2428
2022-04-06 01:12:43,170 - mmdet - INFO - Epoch [19][200/280]	lr: 1.000e-05, eta: 3:01:24, time: 3.084, data_time: 0.025, memory: 28242, loss_cls: 0.2735, loss_bbox: 0.3500, loss_centerness: 0.6048, loss: 1.2282
2022-04-06 01:16:49,825 - mmdet - INFO - Saving checkpoint at 19 epochs
2022-04-06 01:18:55,581 - mmdet - INFO - Evaluating bbox...
2022-04-06 01:19:04,065 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.399
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.528
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.430
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.015
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.143
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.466
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.628
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.628
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.628
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.084
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.385
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.698

2022-04-06 01:19:04,188 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 01:19:04,188 - mmdet - INFO - Epoch(val) [19][975]	bbox_mAP: 0.3990, bbox_mAP_50: 0.5280, bbox_mAP_75: 0.4300, bbox_mAP_s: 0.0150, bbox_mAP_m: 0.1430, bbox_mAP_l: 0.4660, bbox_mAP_copypaste: 0.399 0.528 0.430 0.015 0.143 0.466
2022-04-06 01:19:59,364 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 01:19:59,364 - mmdet - INFO - Epoch(val) [19][70]	loss_cls: 0.3354, loss_bbox: 0.4077, loss_centerness: 0.6098, loss: 1.3529
2022-04-06 01:25:11,339 - mmdet - INFO - Epoch [20][100/280]	lr: 1.000e-05, eta: 2:53:20, time: 3.120, data_time: 0.058, memory: 28242, loss_cls: 0.2747, loss_bbox: 0.3533, loss_centerness: 0.6048, loss: 1.2328
2022-04-06 01:30:19,996 - mmdet - INFO - Epoch [20][200/280]	lr: 1.000e-05, eta: 2:50:47, time: 3.087, data_time: 0.025, memory: 28242, loss_cls: 0.2657, loss_bbox: 0.3361, loss_centerness: 0.6045, loss: 1.2064
2022-04-06 01:34:26,686 - mmdet - INFO - Saving checkpoint at 20 epochs
2022-04-06 01:36:33,954 - mmdet - INFO - Evaluating bbox...
2022-04-06 01:36:42,216 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.401
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.529
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.430
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.013
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.142
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.470
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.632
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.632
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.632
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.079
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.380
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.704

2022-04-06 01:36:42,335 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 01:36:42,335 - mmdet - INFO - Epoch(val) [20][975]	bbox_mAP: 0.4010, bbox_mAP_50: 0.5290, bbox_mAP_75: 0.4300, bbox_mAP_s: 0.0130, bbox_mAP_m: 0.1420, bbox_mAP_l: 0.4700, bbox_mAP_copypaste: 0.401 0.529 0.430 0.013 0.142 0.470
2022-04-06 01:37:37,353 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 01:37:37,353 - mmdet - INFO - Epoch(val) [20][70]	loss_cls: 0.3413, loss_bbox: 0.4002, loss_centerness: 0.6082, loss: 1.3497
2022-04-06 01:42:49,361 - mmdet - INFO - Epoch [21][100/280]	lr: 1.000e-05, eta: 2:42:51, time: 3.120, data_time: 0.058, memory: 28242, loss_cls: 0.2726, loss_bbox: 0.3462, loss_centerness: 0.6047, loss: 1.2234
2022-04-06 01:47:58,116 - mmdet - INFO - Epoch [21][200/280]	lr: 1.000e-05, eta: 2:40:12, time: 3.087, data_time: 0.025, memory: 28242, loss_cls: 0.2594, loss_bbox: 0.3393, loss_centerness: 0.6042, loss: 1.2029
2022-04-06 01:52:04,989 - mmdet - INFO - Saving checkpoint at 21 epochs
2022-04-06 01:54:13,211 - mmdet - INFO - Evaluating bbox...
2022-04-06 01:54:21,856 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.407
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.535
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.437
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.010
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.142
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.478
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.633
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.633
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.633
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.094
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.381
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.704

2022-04-06 01:54:21,972 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 01:54:21,973 - mmdet - INFO - Epoch(val) [21][975]	bbox_mAP: 0.4070, bbox_mAP_50: 0.5350, bbox_mAP_75: 0.4370, bbox_mAP_s: 0.0100, bbox_mAP_m: 0.1420, bbox_mAP_l: 0.4780, bbox_mAP_copypaste: 0.407 0.535 0.437 0.010 0.142 0.478
2022-04-06 01:55:16,840 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 01:55:16,841 - mmdet - INFO - Epoch(val) [21][70]	loss_cls: 0.3378, loss_bbox: 0.4059, loss_centerness: 0.6097, loss: 1.3534
2022-04-06 02:00:28,802 - mmdet - INFO - Epoch [22][100/280]	lr: 1.000e-05, eta: 2:32:24, time: 3.119, data_time: 0.058, memory: 28242, loss_cls: 0.2675, loss_bbox: 0.3472, loss_centerness: 0.6050, loss: 1.2196
2022-04-06 02:05:37,428 - mmdet - INFO - Epoch [22][200/280]	lr: 1.000e-05, eta: 2:29:37, time: 3.086, data_time: 0.025, memory: 28242, loss_cls: 0.2652, loss_bbox: 0.3421, loss_centerness: 0.6046, loss: 1.2119
2022-04-06 02:09:44,218 - mmdet - INFO - Saving checkpoint at 22 epochs
2022-04-06 02:11:49,102 - mmdet - INFO - Evaluating bbox...
2022-04-06 02:11:57,691 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.402
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.531
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.431
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.017
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.145
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.471
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.627
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.627
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.627
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.094
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.384
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.697

2022-04-06 02:11:57,821 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 02:11:57,821 - mmdet - INFO - Epoch(val) [22][975]	bbox_mAP: 0.4020, bbox_mAP_50: 0.5310, bbox_mAP_75: 0.4310, bbox_mAP_s: 0.0170, bbox_mAP_m: 0.1450, bbox_mAP_l: 0.4710, bbox_mAP_copypaste: 0.402 0.531 0.431 0.017 0.145 0.471
2022-04-06 02:12:52,814 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 02:12:52,815 - mmdet - INFO - Epoch(val) [22][70]	loss_cls: 0.3306, loss_bbox: 0.3927, loss_centerness: 0.6083, loss: 1.3315
2022-04-06 02:18:04,784 - mmdet - INFO - Epoch [23][100/280]	lr: 1.000e-06, eta: 2:21:57, time: 3.119, data_time: 0.059, memory: 28242, loss_cls: 0.2642, loss_bbox: 0.3432, loss_centerness: 0.6054, loss: 1.2128
2022-04-06 02:23:13,366 - mmdet - INFO - Epoch [23][200/280]	lr: 1.000e-06, eta: 2:19:04, time: 3.086, data_time: 0.025, memory: 28242, loss_cls: 0.2657, loss_bbox: 0.3399, loss_centerness: 0.6045, loss: 1.2100
2022-04-06 02:27:20,297 - mmdet - INFO - Saving checkpoint at 23 epochs
2022-04-06 02:29:24,659 - mmdet - INFO - Evaluating bbox...
2022-04-06 02:29:33,100 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.407
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.538
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.435
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.015
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.145
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.477
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.630
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.630
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.630
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.095
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.380
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.701

2022-04-06 02:29:33,211 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 02:29:33,212 - mmdet - INFO - Epoch(val) [23][975]	bbox_mAP: 0.4070, bbox_mAP_50: 0.5380, bbox_mAP_75: 0.4350, bbox_mAP_s: 0.0150, bbox_mAP_m: 0.1450, bbox_mAP_l: 0.4770, bbox_mAP_copypaste: 0.407 0.538 0.435 0.015 0.145 0.477
2022-04-06 02:30:28,246 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 02:30:28,247 - mmdet - INFO - Epoch(val) [23][70]	loss_cls: 0.3347, loss_bbox: 0.4027, loss_centerness: 0.6093, loss: 1.3467
2022-04-06 02:35:40,521 - mmdet - INFO - Epoch [24][100/280]	lr: 1.000e-06, eta: 2:11:31, time: 3.123, data_time: 0.057, memory: 28242, loss_cls: 0.2599, loss_bbox: 0.3392, loss_centerness: 0.6041, loss: 1.2033
2022-04-06 02:40:48,775 - mmdet - INFO - Epoch [24][200/280]	lr: 1.000e-06, eta: 2:08:32, time: 3.082, data_time: 0.024, memory: 28242, loss_cls: 0.2636, loss_bbox: 0.3377, loss_centerness: 0.6042, loss: 1.2055
2022-04-06 02:44:55,632 - mmdet - INFO - Saving checkpoint at 24 epochs
2022-04-06 02:46:59,532 - mmdet - INFO - Evaluating bbox...
2022-04-06 02:47:07,820 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.409
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.539
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.439
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.013
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.146
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.479
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.633
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.633
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.633
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.090
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.378
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.705

2022-04-06 02:47:07,942 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 02:47:07,946 - mmdet - INFO - Epoch(val) [24][975]	bbox_mAP: 0.4090, bbox_mAP_50: 0.5390, bbox_mAP_75: 0.4390, bbox_mAP_s: 0.0130, bbox_mAP_m: 0.1460, bbox_mAP_l: 0.4790, bbox_mAP_copypaste: 0.409 0.539 0.439 0.013 0.146 0.479
2022-04-06 02:48:02,880 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 02:48:02,880 - mmdet - INFO - Epoch(val) [24][70]	loss_cls: 0.3363, loss_bbox: 0.3947, loss_centerness: 0.6085, loss: 1.3395
2022-04-06 02:53:15,163 - mmdet - INFO - Epoch [25][100/280]	lr: 1.000e-06, eta: 2:01:05, time: 3.123, data_time: 0.058, memory: 28242, loss_cls: 0.2651, loss_bbox: 0.3447, loss_centerness: 0.6053, loss: 1.2151
2022-04-06 02:58:23,795 - mmdet - INFO - Epoch [25][200/280]	lr: 1.000e-06, eta: 1:58:01, time: 3.086, data_time: 0.025, memory: 28242, loss_cls: 0.2596, loss_bbox: 0.3287, loss_centerness: 0.6028, loss: 1.1911
2022-04-06 03:02:30,871 - mmdet - INFO - Saving checkpoint at 25 epochs
2022-04-06 03:04:36,492 - mmdet - INFO - Evaluating bbox...
2022-04-06 03:04:44,777 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.411
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.540
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.440
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.017
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.148
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.480
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.634
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.634
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.634
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.091
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.383
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.705

2022-04-06 03:04:44,892 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 03:04:44,892 - mmdet - INFO - Epoch(val) [25][975]	bbox_mAP: 0.4110, bbox_mAP_50: 0.5400, bbox_mAP_75: 0.4400, bbox_mAP_s: 0.0170, bbox_mAP_m: 0.1480, bbox_mAP_l: 0.4800, bbox_mAP_copypaste: 0.411 0.540 0.440 0.017 0.148 0.480
2022-04-06 03:05:39,933 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 03:05:39,933 - mmdet - INFO - Epoch(val) [25][70]	loss_cls: 0.3340, loss_bbox: 0.3971, loss_centerness: 0.6078, loss: 1.3389
2022-04-06 03:10:52,263 - mmdet - INFO - Epoch [26][100/280]	lr: 1.000e-06, eta: 1:50:40, time: 3.123, data_time: 0.057, memory: 28242, loss_cls: 0.2609, loss_bbox: 0.3336, loss_centerness: 0.6041, loss: 1.1985
2022-04-06 03:16:01,660 - mmdet - INFO - Epoch [26][200/280]	lr: 1.000e-06, eta: 1:47:31, time: 3.094, data_time: 0.026, memory: 28242, loss_cls: 0.2648, loss_bbox: 0.3395, loss_centerness: 0.6040, loss: 1.2083
2022-04-06 03:20:08,529 - mmdet - INFO - Saving checkpoint at 26 epochs
2022-04-06 03:22:13,682 - mmdet - INFO - Evaluating bbox...
2022-04-06 03:22:21,959 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.411
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.541
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.440
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.015
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.148
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.481
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.635
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.635
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.635
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.089
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.383
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.706

2022-04-06 03:22:22,084 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 03:22:22,084 - mmdet - INFO - Epoch(val) [26][975]	bbox_mAP: 0.4110, bbox_mAP_50: 0.5410, bbox_mAP_75: 0.4400, bbox_mAP_s: 0.0150, bbox_mAP_m: 0.1480, bbox_mAP_l: 0.4810, bbox_mAP_copypaste: 0.411 0.541 0.440 0.015 0.148 0.481
2022-04-06 03:23:17,026 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 03:23:17,026 - mmdet - INFO - Epoch(val) [26][70]	loss_cls: 0.3330, loss_bbox: 0.3940, loss_centerness: 0.6087, loss: 1.3357
2022-04-06 03:28:28,833 - mmdet - INFO - Epoch [27][100/280]	lr: 1.000e-06, eta: 1:40:15, time: 3.118, data_time: 0.058, memory: 28242, loss_cls: 0.2601, loss_bbox: 0.3389, loss_centerness: 0.6033, loss: 1.2024
2022-04-06 03:33:37,186 - mmdet - INFO - Epoch [27][200/280]	lr: 1.000e-06, eta: 1:37:02, time: 3.083, data_time: 0.025, memory: 28242, loss_cls: 0.2630, loss_bbox: 0.3421, loss_centerness: 0.6042, loss: 1.2094
2022-04-06 03:37:43,886 - mmdet - INFO - Saving checkpoint at 27 epochs
2022-04-06 03:39:48,254 - mmdet - INFO - Evaluating bbox...
2022-04-06 03:39:56,487 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.411
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.542
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.441
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.016
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.148
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.481
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.633
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.633
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.633
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.090
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.384
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.703

2022-04-06 03:39:56,600 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 03:39:56,600 - mmdet - INFO - Epoch(val) [27][975]	bbox_mAP: 0.4110, bbox_mAP_50: 0.5420, bbox_mAP_75: 0.4410, bbox_mAP_s: 0.0160, bbox_mAP_m: 0.1480, bbox_mAP_l: 0.4810, bbox_mAP_copypaste: 0.411 0.542 0.441 0.016 0.148 0.481
2022-04-06 03:40:51,485 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 03:40:51,485 - mmdet - INFO - Epoch(val) [27][70]	loss_cls: 0.3319, loss_bbox: 0.3968, loss_centerness: 0.6089, loss: 1.3376
2022-04-06 03:46:03,427 - mmdet - INFO - Epoch [28][100/280]	lr: 1.000e-06, eta: 1:29:50, time: 3.119, data_time: 0.057, memory: 28242, loss_cls: 0.2609, loss_bbox: 0.3378, loss_centerness: 0.6044, loss: 1.2031
2022-04-06 03:51:12,195 - mmdet - INFO - Epoch [28][200/280]	lr: 1.000e-06, eta: 1:26:33, time: 3.088, data_time: 0.025, memory: 28242, loss_cls: 0.2607, loss_bbox: 0.3444, loss_centerness: 0.6045, loss: 1.2096
2022-04-06 03:55:18,866 - mmdet - INFO - Saving checkpoint at 28 epochs
2022-04-06 03:57:22,820 - mmdet - INFO - Evaluating bbox...
2022-04-06 03:57:31,162 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.411
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.541
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.440
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.014
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.148
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.481
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.635
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.635
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.635
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.087
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.386
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.706

2022-04-06 03:57:31,292 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 03:57:31,293 - mmdet - INFO - Epoch(val) [28][975]	bbox_mAP: 0.4110, bbox_mAP_50: 0.5410, bbox_mAP_75: 0.4400, bbox_mAP_s: 0.0140, bbox_mAP_m: 0.1480, bbox_mAP_l: 0.4810, bbox_mAP_copypaste: 0.411 0.541 0.440 0.014 0.148 0.481
2022-04-06 03:58:26,237 - mmdet - INFO - Exp name: myconfig.py
2022-04-06 03:58:26,237 - mmdet - INFO - Epoch(val) [28][70]	loss_cls: 0.3378, loss_bbox: 0.3994, loss_centerness: 0.6093, loss: 1.3466
2022-04-06 04:03:38,252 - mmdet - INFO - Epoch [29][100/280]	lr: 1.000e-06, eta: 1:19:25, time: 3.120, data_time: 0.058, memory: 28242, loss_cls: 0.2612, loss_bbox: 0.3424, loss_centerness: 0.6050, loss: 1.2085
2022-04-06 04:08:46,945 - mmdet - INFO - Epoch [29][200/280]	lr: 1.000e-06, eta: 1:16:04, time: 3.087, data_time: 0.025, memory: 28242, loss_cls: 0.2680, loss_bbox: 0.3454, loss_centerness: 0.6042, loss: 1.2176
