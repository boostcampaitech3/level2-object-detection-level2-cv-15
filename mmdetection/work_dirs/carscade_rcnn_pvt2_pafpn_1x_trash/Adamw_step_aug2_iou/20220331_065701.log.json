{"env_info": "sys.platform: linux\nPython: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0: Tesla V100-PCIE-32GB\nCUDA_HOME: None\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2\nOpenCV: 4.5.5\nMMCV: 1.4.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.22.0+6ddbff8", "config": "model = dict(\n    type='CascadeRCNN',\n    backbone=dict(\n        type='SwinTransformer',\n        embed_dims=96,\n        depths=[2, 2, 18, 2],\n        num_heads=[3, 6, 12, 24],\n        window_size=7,\n        mlp_ratio=4,\n        qkv_bias=True,\n        qk_scale=None,\n        drop_rate=0.0,\n        attn_drop_rate=0.0,\n        drop_path_rate=0.2,\n        patch_norm=True,\n        out_indices=(0, 1, 2, 3),\n        with_cp=False,\n        convert_weights=True,\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint=\n            'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_small_patch4_window7_224.pth'\n        )),\n    neck=dict(\n        type='FPN',\n        in_channels=[96, 192, 384, 768],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.7, 1, 1.5],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.4,\n                    neg_iou_thr=0.4,\n                    min_pos_iou=0.4,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'CocoDataset'\ndata_root = '../dataset/'\nclasses = [\n    'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',\n    'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n]\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\nalbu_train_transforms = [\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(type='Flip', p=1.0),\n            dict(type='RandomRotate90', p=1.0)\n        ],\n        p=0.5),\n    dict(\n        type='RandomResizedCrop',\n        height=512,\n        width=512,\n        scale=(0.5, 1.0),\n        p=0.5),\n    dict(\n        type='RandomBrightnessContrast',\n        brightness_limit=0.1,\n        contrast_limit=0.15,\n        p=0.5),\n    dict(\n        type='HueSaturationValue',\n        hue_shift_limit=15,\n        sat_shift_limit=25,\n        val_shift_limit=10,\n        p=0.5),\n    dict(type='GaussNoise', p=0.3),\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(type='Blur', p=1.0),\n            dict(type='GaussianBlur', p=1.0),\n            dict(type='MedianBlur', blur_limit=5, p=1.0),\n            dict(type='MotionBlur', p=1.0)\n        ],\n        p=0.1)\n]\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(512, 512), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.0),\n    dict(\n        type='Albu',\n        transforms=[\n            dict(\n                type='OneOf',\n                transforms=[\n                    dict(type='Flip', p=1.0),\n                    dict(type='RandomRotate90', p=1.0)\n                ],\n                p=0.5),\n            dict(\n                type='RandomResizedCrop',\n                height=512,\n                width=512,\n                scale=(0.5, 1.0),\n                p=0.5),\n            dict(\n                type='RandomBrightnessContrast',\n                brightness_limit=0.1,\n                contrast_limit=0.15,\n                p=0.5),\n            dict(\n                type='HueSaturationValue',\n                hue_shift_limit=15,\n                sat_shift_limit=25,\n                val_shift_limit=10,\n                p=0.5),\n            dict(type='GaussNoise', p=0.3),\n            dict(\n                type='OneOf',\n                transforms=[\n                    dict(type='Blur', p=1.0),\n                    dict(type='GaussianBlur', p=1.0),\n                    dict(type='MedianBlur', blur_limit=5, p=1.0),\n                    dict(type='MotionBlur', p=1.0)\n                ],\n                p=0.1)\n        ],\n        bbox_params=dict(\n            type='BboxParams',\n            format='pascal_voc',\n            label_fields=['gt_labels'],\n            min_visibility=0.0,\n            filter_lost_elements=True),\n        keymap=dict(img='image', gt_bboxes='bboxes'),\n        update_pad_shape=False,\n        skip_img_without_anno=True),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\nvalid_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(512, 512),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(512, 512),\n        flip=True,\n        flip_direction=['horizontal', 'vertical', 'diagonal'],\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='/opt/ml/detection/dataset/train_new.json',\n        img_prefix='/opt/ml/detection/dataset/',\n        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(512, 512), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.0),\n            dict(\n                type='Albu',\n                transforms=[\n                    dict(\n                        type='OneOf',\n                        transforms=[\n                            dict(type='Flip', p=1.0),\n                            dict(type='RandomRotate90', p=1.0)\n                        ],\n                        p=0.5),\n                    dict(\n                        type='RandomResizedCrop',\n                        height=512,\n                        width=512,\n                        scale=(0.5, 1.0),\n                        p=0.5),\n                    dict(\n                        type='RandomBrightnessContrast',\n                        brightness_limit=0.1,\n                        contrast_limit=0.15,\n                        p=0.5),\n                    dict(\n                        type='HueSaturationValue',\n                        hue_shift_limit=15,\n                        sat_shift_limit=25,\n                        val_shift_limit=10,\n                        p=0.5),\n                    dict(type='GaussNoise', p=0.3),\n                    dict(\n                        type='OneOf',\n                        transforms=[\n                            dict(type='Blur', p=1.0),\n                            dict(type='GaussianBlur', p=1.0),\n                            dict(type='MedianBlur', blur_limit=5, p=1.0),\n                            dict(type='MotionBlur', p=1.0)\n                        ],\n                        p=0.1)\n                ],\n                bbox_params=dict(\n                    type='BboxParams',\n                    format='pascal_voc',\n                    label_fields=['gt_labels'],\n                    min_visibility=0.0,\n                    filter_lost_elements=True),\n                keymap=dict(img='image', gt_bboxes='bboxes'),\n                update_pad_shape=False,\n                skip_img_without_anno=True),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='/opt/ml/detection/dataset/cv_val_1.json',\n        img_prefix='/opt/ml/detection/dataset/',\n        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(512, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='/opt/ml/detection/dataset/test.json',\n        img_prefix='/opt/ml/detection/dataset/',\n        classes=('General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n                 'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'),\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(512, 512),\n                flip=True,\n                flip_direction=['horizontal', 'vertical', 'diagonal'],\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox')\ncheckpoint_config = dict(interval=1)\nlog_config = dict(\n    interval=200,\n    hooks=[\n        dict(type='TextLoggerHook', interval=400),\n        dict(\n            type='WandbLoggerHook',\n            interval=200,\n            init_kwargs=dict(project='objectdetection', name='LIM_MM_testing'))\n    ])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\noptimizer = dict(\n    type='AdamW', lr=0.0001, betas=(0.9, 0.999), weight_decay=0.05)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='CosineRestart',\n    warmup='linear',\n    warmup_iters=611,\n    warmup_ratio=0.001,\n    periods=[1, 12, 12, 12],\n    restart_weights=[1, 1, 0.5, 0.5],\n    min_lr=0)\nrunner = dict(type='EpochBasedRunner', max_epochs=30)\npretrained = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_small_patch4_window7_224.pth'\nwork_dir = './work_dirs/carscade_rcnn_pvt2_pafpn_1x_trash/Adamw_step_aug2_iou'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 2022, "exp_name": "85_cascade_swins_fpn_3x_iou_change.py"}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 7e-05, "memory": 11429, "data_time": 0.01675, "loss_rpn_cls": 0.20574, "loss_rpn_bbox": 0.03568, "s0.loss_cls": 0.44653, "s0.acc": 88.59979, "s0.loss_bbox": 0.25808, "s1.loss_cls": 0.15116, "s1.acc": 94.75029, "s1.loss_bbox": 0.12876, "s2.loss_cls": 0.06681, "s2.acc": 94.692, "s2.loss_bbox": 0.0403, "loss": 1.33305, "time": 0.97599}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.0001, "memory": 11429, "data_time": 0.01072, "loss_rpn_cls": 0.07291, "loss_rpn_bbox": 0.03317, "s0.loss_cls": 0.33681, "s0.acc": 90.896, "s0.loss_bbox": 0.23383, "s1.loss_cls": 0.16687, "s1.acc": 90.60389, "s1.loss_bbox": 0.19004, "s2.loss_cls": 0.07843, "s2.acc": 90.92525, "s2.loss_bbox": 0.10081, "loss": 1.21286, "time": 0.97982}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.0001, "memory": 11429, "data_time": 0.01097, "loss_rpn_cls": 0.05977, "loss_rpn_bbox": 0.02798, "s0.loss_cls": 0.31603, "s0.acc": 91.22351, "s0.loss_bbox": 0.20717, "s1.loss_cls": 0.16134, "s1.acc": 90.61515, "s1.loss_bbox": 0.17983, "s2.loss_cls": 0.07682, "s2.acc": 90.79005, "s2.loss_bbox": 0.09826, "loss": 1.1272, "time": 0.98069}
{"mode": "val", "epoch": 1, "iter": 975, "lr": 0.0001, "bbox_mAP": 0.235, "bbox_mAP_50": 0.386, "bbox_mAP_75": 0.256, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.07, "bbox_mAP_l": 0.285, "bbox_mAP_copypaste": "0.235 0.386 0.256 0.000 0.070 0.285"}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.0001, "memory": 11429, "data_time": 0.01801, "loss_rpn_cls": 0.05135, "loss_rpn_bbox": 0.02583, "s0.loss_cls": 0.28413, "s0.acc": 91.75262, "s0.loss_bbox": 0.1831, "s1.loss_cls": 0.14567, "s1.acc": 91.19448, "s1.loss_bbox": 0.16005, "s2.loss_cls": 0.06936, "s2.acc": 91.37385, "s2.loss_bbox": 0.08912, "loss": 1.0086, "time": 0.97205}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.0001, "memory": 11429, "data_time": 0.01152, "loss_rpn_cls": 0.05148, "loss_rpn_bbox": 0.0243, "s0.loss_cls": 0.27995, "s0.acc": 91.75287, "s0.loss_bbox": 0.17707, "s1.loss_cls": 0.14278, "s1.acc": 91.23734, "s1.loss_bbox": 0.15208, "s2.loss_cls": 0.06847, "s2.acc": 91.39154, "s2.loss_bbox": 0.08491, "loss": 0.98103, "time": 0.95859}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 0.0001, "memory": 11429, "data_time": 0.01166, "loss_rpn_cls": 0.05089, "loss_rpn_bbox": 0.02358, "s0.loss_cls": 0.28828, "s0.acc": 91.41077, "s0.loss_bbox": 0.17677, "s1.loss_cls": 0.14746, "s1.acc": 90.8653, "s1.loss_bbox": 0.15205, "s2.loss_cls": 0.07096, "s2.acc": 91.02235, "s2.loss_bbox": 0.08447, "loss": 0.99448, "time": 0.95717}
{"mode": "val", "epoch": 2, "iter": 975, "lr": 0.0001, "bbox_mAP": 0.336, "bbox_mAP_50": 0.49, "bbox_mAP_75": 0.37, "bbox_mAP_s": 0.001, "bbox_mAP_m": 0.092, "bbox_mAP_l": 0.405, "bbox_mAP_copypaste": "0.336 0.490 0.370 0.001 0.092 0.405"}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.0001, "memory": 11429, "data_time": 0.0177, "loss_rpn_cls": 0.04666, "loss_rpn_bbox": 0.02163, "s0.loss_cls": 0.2651, "s0.acc": 91.93896, "s0.loss_bbox": 0.17006, "s1.loss_cls": 0.13545, "s1.acc": 91.37539, "s1.loss_bbox": 0.14864, "s2.loss_cls": 0.06564, "s2.acc": 91.47656, "s2.loss_bbox": 0.0827, "loss": 0.93586, "time": 0.97254}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.0001, "memory": 11429, "data_time": 0.01151, "loss_rpn_cls": 0.04583, "loss_rpn_bbox": 0.02284, "s0.loss_cls": 0.26461, "s0.acc": 91.98712, "s0.loss_bbox": 0.15878, "s1.loss_cls": 0.13733, "s1.acc": 91.3593, "s1.loss_bbox": 0.13793, "s2.loss_cls": 0.06728, "s2.acc": 91.35552, "s2.loss_bbox": 0.07797, "loss": 0.91257, "time": 0.97251}
{"mode": "train", "epoch": 3, "iter": 1200, "lr": 0.0001, "memory": 11429, "data_time": 0.01174, "loss_rpn_cls": 0.04549, "loss_rpn_bbox": 0.02054, "s0.loss_cls": 0.26392, "s0.acc": 91.95416, "s0.loss_bbox": 0.16347, "s1.loss_cls": 0.13501, "s1.acc": 91.4301, "s1.loss_bbox": 0.13769, "s2.loss_cls": 0.06559, "s2.acc": 91.51987, "s2.loss_bbox": 0.07558, "loss": 0.9073, "time": 0.96475}
{"mode": "val", "epoch": 3, "iter": 975, "lr": 0.0001, "bbox_mAP": 0.354, "bbox_mAP_50": 0.518, "bbox_mAP_75": 0.378, "bbox_mAP_s": 0.005, "bbox_mAP_m": 0.082, "bbox_mAP_l": 0.426, "bbox_mAP_copypaste": "0.354 0.518 0.378 0.005 0.082 0.426"}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 9e-05, "memory": 11429, "data_time": 0.01777, "loss_rpn_cls": 0.04264, "loss_rpn_bbox": 0.02071, "s0.loss_cls": 0.25007, "s0.acc": 92.28754, "s0.loss_bbox": 0.15691, "s1.loss_cls": 0.12797, "s1.acc": 91.80449, "s1.loss_bbox": 0.13581, "s2.loss_cls": 0.0626, "s2.acc": 91.88905, "s2.loss_bbox": 0.07599, "loss": 0.8727, "time": 0.97325}
{"mode": "train", "epoch": 4, "iter": 800, "lr": 9e-05, "memory": 11429, "data_time": 0.01172, "loss_rpn_cls": 0.04195, "loss_rpn_bbox": 0.02093, "s0.loss_cls": 0.25509, "s0.acc": 92.07458, "s0.loss_bbox": 0.15468, "s1.loss_cls": 0.13243, "s1.acc": 91.39561, "s1.loss_bbox": 0.13453, "s2.loss_cls": 0.06539, "s2.acc": 91.29265, "s2.loss_bbox": 0.07498, "loss": 0.87998, "time": 0.96766}
{"mode": "train", "epoch": 4, "iter": 1200, "lr": 9e-05, "memory": 11429, "data_time": 0.01184, "loss_rpn_cls": 0.04237, "loss_rpn_bbox": 0.02042, "s0.loss_cls": 0.24942, "s0.acc": 92.28436, "s0.loss_bbox": 0.15201, "s1.loss_cls": 0.12942, "s1.acc": 91.60793, "s1.loss_bbox": 0.13107, "s2.loss_cls": 0.06393, "s2.acc": 91.49143, "s2.loss_bbox": 0.0736, "loss": 0.86224, "time": 0.97073}
{"mode": "val", "epoch": 4, "iter": 975, "lr": 9e-05, "bbox_mAP": 0.414, "bbox_mAP_50": 0.589, "bbox_mAP_75": 0.455, "bbox_mAP_s": 0.007, "bbox_mAP_m": 0.153, "bbox_mAP_l": 0.487, "bbox_mAP_copypaste": "0.414 0.589 0.455 0.007 0.153 0.487"}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 9e-05, "memory": 11429, "data_time": 0.01783, "loss_rpn_cls": 0.03891, "loss_rpn_bbox": 0.02045, "s0.loss_cls": 0.23336, "s0.acc": 92.59625, "s0.loss_bbox": 0.14917, "s1.loss_cls": 0.11995, "s1.acc": 92.04886, "s1.loss_bbox": 0.12967, "s2.loss_cls": 0.05889, "s2.acc": 92.01462, "s2.loss_bbox": 0.07347, "loss": 0.82388, "time": 0.964}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 9e-05, "memory": 11429, "data_time": 0.01166, "loss_rpn_cls": 0.04049, "loss_rpn_bbox": 0.01919, "s0.loss_cls": 0.23173, "s0.acc": 92.80646, "s0.loss_bbox": 0.14332, "s1.loss_cls": 0.11918, "s1.acc": 92.28712, "s1.loss_bbox": 0.12534, "s2.loss_cls": 0.05886, "s2.acc": 92.2123, "s2.loss_bbox": 0.07099, "loss": 0.8091, "time": 0.95997}
{"mode": "train", "epoch": 5, "iter": 1200, "lr": 9e-05, "memory": 11429, "data_time": 0.01173, "loss_rpn_cls": 0.03851, "loss_rpn_bbox": 0.01876, "s0.loss_cls": 0.24182, "s0.acc": 92.32031, "s0.loss_bbox": 0.14899, "s1.loss_cls": 0.12491, "s1.acc": 91.73722, "s1.loss_bbox": 0.12769, "s2.loss_cls": 0.06137, "s2.acc": 91.75867, "s2.loss_bbox": 0.07064, "loss": 0.83268, "time": 0.96435}
{"mode": "val", "epoch": 5, "iter": 975, "lr": 9e-05, "bbox_mAP": 0.436, "bbox_mAP_50": 0.607, "bbox_mAP_75": 0.469, "bbox_mAP_s": 0.01, "bbox_mAP_m": 0.153, "bbox_mAP_l": 0.514, "bbox_mAP_copypaste": "0.436 0.607 0.469 0.010 0.153 0.514"}
{"mode": "train", "epoch": 6, "iter": 400, "lr": 8e-05, "memory": 11429, "data_time": 0.01781, "loss_rpn_cls": 0.03699, "loss_rpn_bbox": 0.01816, "s0.loss_cls": 0.21882, "s0.acc": 92.99915, "s0.loss_bbox": 0.13822, "s1.loss_cls": 0.11124, "s1.acc": 92.62119, "s1.loss_bbox": 0.11758, "s2.loss_cls": 0.0546, "s2.acc": 92.57653, "s2.loss_bbox": 0.06647, "loss": 0.76207, "time": 0.9725}
{"mode": "train", "epoch": 6, "iter": 800, "lr": 8e-05, "memory": 11429, "data_time": 0.01168, "loss_rpn_cls": 0.03739, "loss_rpn_bbox": 0.01932, "s0.loss_cls": 0.22872, "s0.acc": 92.61475, "s0.loss_bbox": 0.14545, "s1.loss_cls": 0.11786, "s1.acc": 92.02368, "s1.loss_bbox": 0.1264, "s2.loss_cls": 0.05805, "s2.acc": 91.97404, "s2.loss_bbox": 0.07066, "loss": 0.80385, "time": 0.96838}
{"mode": "train", "epoch": 6, "iter": 1200, "lr": 8e-05, "memory": 11429, "data_time": 0.01157, "loss_rpn_cls": 0.0377, "loss_rpn_bbox": 0.01829, "s0.loss_cls": 0.22996, "s0.acc": 92.5896, "s0.loss_bbox": 0.14287, "s1.loss_cls": 0.1197, "s1.acc": 91.96765, "s1.loss_bbox": 0.1247, "s2.loss_cls": 0.05948, "s2.acc": 91.78862, "s2.loss_bbox": 0.0704, "loss": 0.80309, "time": 0.96549}
{"mode": "val", "epoch": 6, "iter": 975, "lr": 8e-05, "bbox_mAP": 0.452, "bbox_mAP_50": 0.63, "bbox_mAP_75": 0.495, "bbox_mAP_s": 0.012, "bbox_mAP_m": 0.187, "bbox_mAP_l": 0.53, "bbox_mAP_copypaste": "0.452 0.630 0.495 0.012 0.187 0.530"}
{"mode": "train", "epoch": 7, "iter": 400, "lr": 6e-05, "memory": 11429, "data_time": 0.0179, "loss_rpn_cls": 0.0345, "loss_rpn_bbox": 0.01751, "s0.loss_cls": 0.20965, "s0.acc": 93.06146, "s0.loss_bbox": 0.13608, "s1.loss_cls": 0.1083, "s1.acc": 92.50497, "s1.loss_bbox": 0.12012, "s2.loss_cls": 0.0538, "s2.acc": 92.35349, "s2.loss_bbox": 0.06785, "loss": 0.74781, "time": 0.96601}
{"mode": "train", "epoch": 7, "iter": 800, "lr": 6e-05, "memory": 11429, "data_time": 0.01173, "loss_rpn_cls": 0.03346, "loss_rpn_bbox": 0.01635, "s0.loss_cls": 0.21268, "s0.acc": 93.02057, "s0.loss_bbox": 0.13582, "s1.loss_cls": 0.10949, "s1.acc": 92.46126, "s1.loss_bbox": 0.1207, "s2.loss_cls": 0.05417, "s2.acc": 92.30944, "s2.loss_bbox": 0.07007, "loss": 0.75273, "time": 0.96343}
{"mode": "train", "epoch": 7, "iter": 1200, "lr": 6e-05, "memory": 11429, "data_time": 0.01173, "loss_rpn_cls": 0.03519, "loss_rpn_bbox": 0.01837, "s0.loss_cls": 0.21291, "s0.acc": 93.06458, "s0.loss_bbox": 0.13627, "s1.loss_cls": 0.11059, "s1.acc": 92.45212, "s1.loss_bbox": 0.11996, "s2.loss_cls": 0.05508, "s2.acc": 92.32566, "s2.loss_bbox": 0.06875, "loss": 0.7571, "time": 0.96241}
{"mode": "val", "epoch": 7, "iter": 975, "lr": 6e-05, "bbox_mAP": 0.498, "bbox_mAP_50": 0.67, "bbox_mAP_75": 0.534, "bbox_mAP_s": 0.01, "bbox_mAP_m": 0.192, "bbox_mAP_l": 0.583, "bbox_mAP_copypaste": "0.498 0.670 0.534 0.010 0.192 0.583"}
{"mode": "train", "epoch": 8, "iter": 400, "lr": 5e-05, "memory": 11429, "data_time": 0.01766, "loss_rpn_cls": 0.03365, "loss_rpn_bbox": 0.01741, "s0.loss_cls": 0.20161, "s0.acc": 93.2699, "s0.loss_bbox": 0.13342, "s1.loss_cls": 0.10433, "s1.acc": 92.70075, "s1.loss_bbox": 0.12065, "s2.loss_cls": 0.05193, "s2.acc": 92.54151, "s2.loss_bbox": 0.06955, "loss": 0.73255, "time": 0.96579}
{"mode": "train", "epoch": 8, "iter": 800, "lr": 5e-05, "memory": 11429, "data_time": 0.01172, "loss_rpn_cls": 0.03189, "loss_rpn_bbox": 0.0164, "s0.loss_cls": 0.19439, "s0.acc": 93.4469, "s0.loss_bbox": 0.12894, "s1.loss_cls": 0.10057, "s1.acc": 92.90994, "s1.loss_bbox": 0.11469, "s2.loss_cls": 0.04995, "s2.acc": 92.74279, "s2.loss_bbox": 0.06521, "loss": 0.70204, "time": 0.96516}
{"mode": "train", "epoch": 8, "iter": 1200, "lr": 5e-05, "memory": 11429, "data_time": 0.01178, "loss_rpn_cls": 0.03286, "loss_rpn_bbox": 0.01665, "s0.loss_cls": 0.19666, "s0.acc": 93.39264, "s0.loss_bbox": 0.12828, "s1.loss_cls": 0.10231, "s1.acc": 92.85721, "s1.loss_bbox": 0.11403, "s2.loss_cls": 0.05095, "s2.acc": 92.77267, "s2.loss_bbox": 0.06623, "loss": 0.70797, "time": 0.96109}
{"mode": "val", "epoch": 8, "iter": 975, "lr": 5e-05, "bbox_mAP": 0.521, "bbox_mAP_50": 0.697, "bbox_mAP_75": 0.557, "bbox_mAP_s": 0.018, "bbox_mAP_m": 0.204, "bbox_mAP_l": 0.609, "bbox_mAP_copypaste": "0.521 0.697 0.557 0.018 0.204 0.609"}
{"mode": "train", "epoch": 9, "iter": 400, "lr": 4e-05, "memory": 11429, "data_time": 0.0177, "loss_rpn_cls": 0.03124, "loss_rpn_bbox": 0.01627, "s0.loss_cls": 0.18683, "s0.acc": 93.67163, "s0.loss_bbox": 0.12782, "s1.loss_cls": 0.09595, "s1.acc": 93.23836, "s1.loss_bbox": 0.11338, "s2.loss_cls": 0.04789, "s2.acc": 93.01609, "s2.loss_bbox": 0.06693, "loss": 0.68632, "time": 0.9627}
{"mode": "train", "epoch": 9, "iter": 800, "lr": 4e-05, "memory": 11429, "data_time": 0.0117, "loss_rpn_cls": 0.03238, "loss_rpn_bbox": 0.01719, "s0.loss_cls": 0.18553, "s0.acc": 93.71448, "s0.loss_bbox": 0.12718, "s1.loss_cls": 0.09567, "s1.acc": 93.21269, "s1.loss_bbox": 0.11202, "s2.loss_cls": 0.04764, "s2.acc": 93.0378, "s2.loss_bbox": 0.06455, "loss": 0.68215, "time": 0.96181}
{"mode": "train", "epoch": 9, "iter": 1200, "lr": 4e-05, "memory": 11429, "data_time": 0.01179, "loss_rpn_cls": 0.02866, "loss_rpn_bbox": 0.01465, "s0.loss_cls": 0.18261, "s0.acc": 93.77905, "s0.loss_bbox": 0.12245, "s1.loss_cls": 0.09399, "s1.acc": 93.29632, "s1.loss_bbox": 0.10982, "s2.loss_cls": 0.04698, "s2.acc": 93.05994, "s2.loss_bbox": 0.06406, "loss": 0.66322, "time": 0.96059}
{"mode": "val", "epoch": 9, "iter": 975, "lr": 4e-05, "bbox_mAP": 0.542, "bbox_mAP_50": 0.719, "bbox_mAP_75": 0.582, "bbox_mAP_s": 0.014, "bbox_mAP_m": 0.24, "bbox_mAP_l": 0.63, "bbox_mAP_copypaste": "0.542 0.719 0.582 0.014 0.240 0.630"}
{"mode": "train", "epoch": 10, "iter": 400, "lr": 3e-05, "memory": 11429, "data_time": 0.01781, "loss_rpn_cls": 0.02786, "loss_rpn_bbox": 0.0156, "s0.loss_cls": 0.1748, "s0.acc": 93.97394, "s0.loss_bbox": 0.121, "s1.loss_cls": 0.08998, "s1.acc": 93.49146, "s1.loss_bbox": 0.10759, "s2.loss_cls": 0.0451, "s2.acc": 93.31764, "s2.loss_bbox": 0.06324, "loss": 0.64517, "time": 0.96738}
{"mode": "train", "epoch": 10, "iter": 800, "lr": 3e-05, "memory": 11429, "data_time": 0.01175, "loss_rpn_cls": 0.02883, "loss_rpn_bbox": 0.01528, "s0.loss_cls": 0.16894, "s0.acc": 94.19299, "s0.loss_bbox": 0.11688, "s1.loss_cls": 0.08641, "s1.acc": 93.79349, "s1.loss_bbox": 0.10533, "s2.loss_cls": 0.04298, "s2.acc": 93.61975, "s2.loss_bbox": 0.06212, "loss": 0.62677, "time": 0.968}
{"mode": "train", "epoch": 10, "iter": 1200, "lr": 3e-05, "memory": 11429, "data_time": 0.01189, "loss_rpn_cls": 0.02817, "loss_rpn_bbox": 0.0154, "s0.loss_cls": 0.17359, "s0.acc": 93.98285, "s0.loss_bbox": 0.12288, "s1.loss_cls": 0.08908, "s1.acc": 93.58663, "s1.loss_bbox": 0.1111, "s2.loss_cls": 0.04435, "s2.acc": 93.42525, "s2.loss_bbox": 0.06475, "loss": 0.64932, "time": 0.96111}
{"mode": "val", "epoch": 10, "iter": 975, "lr": 3e-05, "bbox_mAP": 0.563, "bbox_mAP_50": 0.74, "bbox_mAP_75": 0.599, "bbox_mAP_s": 0.027, "bbox_mAP_m": 0.257, "bbox_mAP_l": 0.648, "bbox_mAP_copypaste": "0.563 0.740 0.599 0.027 0.257 0.648"}
{"mode": "train", "epoch": 11, "iter": 400, "lr": 1e-05, "memory": 11429, "data_time": 0.01771, "loss_rpn_cls": 0.02606, "loss_rpn_bbox": 0.01445, "s0.loss_cls": 0.16261, "s0.acc": 94.3291, "s0.loss_bbox": 0.11536, "s1.loss_cls": 0.08376, "s1.acc": 93.89312, "s1.loss_bbox": 0.10559, "s2.loss_cls": 0.04208, "s2.acc": 93.66261, "s2.loss_bbox": 0.06206, "loss": 0.61197, "time": 0.96651}
{"mode": "train", "epoch": 11, "iter": 800, "lr": 1e-05, "memory": 11429, "data_time": 0.0116, "loss_rpn_cls": 0.02806, "loss_rpn_bbox": 0.01541, "s0.loss_cls": 0.16326, "s0.acc": 94.29578, "s0.loss_bbox": 0.11667, "s1.loss_cls": 0.08331, "s1.acc": 93.90063, "s1.loss_bbox": 0.10349, "s2.loss_cls": 0.04145, "s2.acc": 93.75474, "s2.loss_bbox": 0.06073, "loss": 0.61237, "time": 0.96171}
{"mode": "train", "epoch": 11, "iter": 1200, "lr": 1e-05, "memory": 11429, "data_time": 0.01193, "loss_rpn_cls": 0.02784, "loss_rpn_bbox": 0.01503, "s0.loss_cls": 0.16322, "s0.acc": 94.31921, "s0.loss_bbox": 0.11392, "s1.loss_cls": 0.08353, "s1.acc": 93.91261, "s1.loss_bbox": 0.10256, "s2.loss_cls": 0.04163, "s2.acc": 93.75326, "s2.loss_bbox": 0.06128, "loss": 0.60901, "time": 0.96191}
{"mode": "val", "epoch": 11, "iter": 975, "lr": 1e-05, "bbox_mAP": 0.58, "bbox_mAP_50": 0.757, "bbox_mAP_75": 0.612, "bbox_mAP_s": 0.023, "bbox_mAP_m": 0.277, "bbox_mAP_l": 0.664, "bbox_mAP_copypaste": "0.580 0.757 0.612 0.023 0.277 0.664"}
{"mode": "train", "epoch": 12, "iter": 400, "lr": 1e-05, "memory": 11429, "data_time": 0.01792, "loss_rpn_cls": 0.02532, "loss_rpn_bbox": 0.01466, "s0.loss_cls": 0.15908, "s0.acc": 94.40198, "s0.loss_bbox": 0.11509, "s1.loss_cls": 0.08152, "s1.acc": 94.01552, "s1.loss_bbox": 0.10415, "s2.loss_cls": 0.04102, "s2.acc": 93.80662, "s2.loss_bbox": 0.06271, "loss": 0.60353, "time": 0.96708}
{"mode": "train", "epoch": 12, "iter": 800, "lr": 1e-05, "memory": 11429, "data_time": 0.01191, "loss_rpn_cls": 0.02683, "loss_rpn_bbox": 0.01451, "s0.loss_cls": 0.15744, "s0.acc": 94.48755, "s0.loss_bbox": 0.11337, "s1.loss_cls": 0.07932, "s1.acc": 94.18814, "s1.loss_bbox": 0.10225, "s2.loss_cls": 0.03974, "s2.acc": 94.04305, "s2.loss_bbox": 0.06014, "loss": 0.59361, "time": 0.96315}
{"mode": "train", "epoch": 12, "iter": 1200, "lr": 1e-05, "memory": 11429, "data_time": 0.01216, "loss_rpn_cls": 0.02621, "loss_rpn_bbox": 0.01486, "s0.loss_cls": 0.15685, "s0.acc": 94.46808, "s0.loss_bbox": 0.11418, "s1.loss_cls": 0.07994, "s1.acc": 94.12519, "s1.loss_bbox": 0.10377, "s2.loss_cls": 0.03998, "s2.acc": 93.94186, "s2.loss_bbox": 0.06187, "loss": 0.59767, "time": 0.9761}
{"mode": "val", "epoch": 12, "iter": 975, "lr": 1e-05, "bbox_mAP": 0.585, "bbox_mAP_50": 0.761, "bbox_mAP_75": 0.621, "bbox_mAP_s": 0.025, "bbox_mAP_m": 0.272, "bbox_mAP_l": 0.671, "bbox_mAP_copypaste": "0.585 0.761 0.621 0.025 0.272 0.671"}
{"mode": "train", "epoch": 13, "iter": 400, "lr": 0.0, "memory": 11429, "data_time": 0.01793, "loss_rpn_cls": 0.02585, "loss_rpn_bbox": 0.01444, "s0.loss_cls": 0.15401, "s0.acc": 94.56989, "s0.loss_bbox": 0.11313, "s1.loss_cls": 0.07838, "s1.acc": 94.20745, "s1.loss_bbox": 0.10447, "s2.loss_cls": 0.03908, "s2.acc": 94.04018, "s2.loss_bbox": 0.06234, "loss": 0.59169, "time": 0.9679}
{"mode": "train", "epoch": 13, "iter": 800, "lr": 0.0, "memory": 11429, "data_time": 0.01178, "loss_rpn_cls": 0.02649, "loss_rpn_bbox": 0.01417, "s0.loss_cls": 0.15335, "s0.acc": 94.59509, "s0.loss_bbox": 0.11095, "s1.loss_cls": 0.0781, "s1.acc": 94.27519, "s1.loss_bbox": 0.10086, "s2.loss_cls": 0.03906, "s2.acc": 94.08541, "s2.loss_bbox": 0.06067, "loss": 0.58365, "time": 0.96441}
{"mode": "train", "epoch": 13, "iter": 1200, "lr": 0.0, "memory": 11429, "data_time": 0.01166, "loss_rpn_cls": 0.02516, "loss_rpn_bbox": 0.01426, "s0.loss_cls": 0.15225, "s0.acc": 94.64227, "s0.loss_bbox": 0.11107, "s1.loss_cls": 0.07755, "s1.acc": 94.3219, "s1.loss_bbox": 0.10104, "s2.loss_cls": 0.03867, "s2.acc": 94.17925, "s2.loss_bbox": 0.06003, "loss": 0.58004, "time": 0.95821}
{"mode": "val", "epoch": 13, "iter": 975, "lr": 0.0, "bbox_mAP": 0.589, "bbox_mAP_50": 0.766, "bbox_mAP_75": 0.625, "bbox_mAP_s": 0.027, "bbox_mAP_m": 0.275, "bbox_mAP_l": 0.675, "bbox_mAP_copypaste": "0.589 0.766 0.625 0.027 0.275 0.675"}
{"mode": "train", "epoch": 14, "iter": 400, "lr": 5e-05, "memory": 11429, "data_time": 0.01791, "loss_rpn_cls": 0.02825, "loss_rpn_bbox": 0.01559, "s0.loss_cls": 0.1691, "s0.acc": 94.19269, "s0.loss_bbox": 0.11768, "s1.loss_cls": 0.08646, "s1.acc": 93.79734, "s1.loss_bbox": 0.10491, "s2.loss_cls": 0.04327, "s2.acc": 93.5928, "s2.loss_bbox": 0.06322, "loss": 0.62849, "time": 0.96371}
{"mode": "train", "epoch": 14, "iter": 800, "lr": 5e-05, "memory": 11429, "data_time": 0.01152, "loss_rpn_cls": 0.03041, "loss_rpn_bbox": 0.01608, "s0.loss_cls": 0.17741, "s0.acc": 93.98572, "s0.loss_bbox": 0.12057, "s1.loss_cls": 0.09098, "s1.acc": 93.53589, "s1.loss_bbox": 0.10772, "s2.loss_cls": 0.04538, "s2.acc": 93.34266, "s2.loss_bbox": 0.06429, "loss": 0.65286, "time": 0.95549}
{"mode": "train", "epoch": 14, "iter": 1200, "lr": 5e-05, "memory": 11429, "data_time": 0.01168, "loss_rpn_cls": 0.02851, "loss_rpn_bbox": 0.01579, "s0.loss_cls": 0.17491, "s0.acc": 94.00824, "s0.loss_bbox": 0.11973, "s1.loss_cls": 0.08939, "s1.acc": 93.54639, "s1.loss_bbox": 0.10815, "s2.loss_cls": 0.04478, "s2.acc": 93.3056, "s2.loss_bbox": 0.0634, "loss": 0.64466, "time": 0.9633}
{"mode": "val", "epoch": 14, "iter": 975, "lr": 5e-05, "bbox_mAP": 0.566, "bbox_mAP_50": 0.747, "bbox_mAP_75": 0.6, "bbox_mAP_s": 0.028, "bbox_mAP_m": 0.248, "bbox_mAP_l": 0.654, "bbox_mAP_copypaste": "0.566 0.747 0.600 0.028 0.248 0.654"}
{"mode": "train", "epoch": 15, "iter": 400, "lr": 5e-05, "memory": 11429, "data_time": 0.01766, "loss_rpn_cls": 0.02916, "loss_rpn_bbox": 0.01615, "s0.loss_cls": 0.17233, "s0.acc": 94.04767, "s0.loss_bbox": 0.12077, "s1.loss_cls": 0.08819, "s1.acc": 93.66228, "s1.loss_bbox": 0.10967, "s2.loss_cls": 0.04456, "s2.acc": 93.40729, "s2.loss_bbox": 0.06593, "loss": 0.64676, "time": 0.96081}
{"mode": "train", "epoch": 15, "iter": 800, "lr": 5e-05, "memory": 11429, "data_time": 0.01139, "loss_rpn_cls": 0.02744, "loss_rpn_bbox": 0.01483, "s0.loss_cls": 0.17027, "s0.acc": 94.12769, "s0.loss_bbox": 0.11581, "s1.loss_cls": 0.08771, "s1.acc": 93.66663, "s1.loss_bbox": 0.10564, "s2.loss_cls": 0.04401, "s2.acc": 93.45487, "s2.loss_bbox": 0.06347, "loss": 0.62917, "time": 0.96081}
{"mode": "train", "epoch": 15, "iter": 1200, "lr": 5e-05, "memory": 11429, "data_time": 0.01152, "loss_rpn_cls": 0.02981, "loss_rpn_bbox": 0.01658, "s0.loss_cls": 0.17894, "s0.acc": 93.92804, "s0.loss_bbox": 0.1204, "s1.loss_cls": 0.09184, "s1.acc": 93.50327, "s1.loss_bbox": 0.10709, "s2.loss_cls": 0.04598, "s2.acc": 93.26279, "s2.loss_bbox": 0.06387, "loss": 0.65452, "time": 0.96018}
{"mode": "val", "epoch": 15, "iter": 975, "lr": 5e-05, "bbox_mAP": 0.57, "bbox_mAP_50": 0.75, "bbox_mAP_75": 0.609, "bbox_mAP_s": 0.012, "bbox_mAP_m": 0.252, "bbox_mAP_l": 0.657, "bbox_mAP_copypaste": "0.570 0.750 0.609 0.012 0.252 0.657"}
{"mode": "train", "epoch": 16, "iter": 400, "lr": 5e-05, "memory": 11429, "data_time": 0.01792, "loss_rpn_cls": 0.02611, "loss_rpn_bbox": 0.01552, "s0.loss_cls": 0.16892, "s0.acc": 94.12341, "s0.loss_bbox": 0.12035, "s1.loss_cls": 0.08678, "s1.acc": 93.73318, "s1.loss_bbox": 0.11006, "s2.loss_cls": 0.04327, "s2.acc": 93.55727, "s2.loss_bbox": 0.06634, "loss": 0.63736, "time": 0.96673}
{"mode": "train", "epoch": 16, "iter": 800, "lr": 5e-05, "memory": 11429, "data_time": 0.01152, "loss_rpn_cls": 0.02798, "loss_rpn_bbox": 0.01577, "s0.loss_cls": 0.16499, "s0.acc": 94.29138, "s0.loss_bbox": 0.11502, "s1.loss_cls": 0.08371, "s1.acc": 93.90291, "s1.loss_bbox": 0.10459, "s2.loss_cls": 0.04194, "s2.acc": 93.62942, "s2.loss_bbox": 0.06252, "loss": 0.61653, "time": 0.95959}
{"mode": "train", "epoch": 16, "iter": 1200, "lr": 5e-05, "memory": 11429, "data_time": 0.01151, "loss_rpn_cls": 0.02807, "loss_rpn_bbox": 0.01525, "s0.loss_cls": 0.17065, "s0.acc": 94.15698, "s0.loss_bbox": 0.1163, "s1.loss_cls": 0.0872, "s1.acc": 93.76195, "s1.loss_bbox": 0.10415, "s2.loss_cls": 0.04372, "s2.acc": 93.54549, "s2.loss_bbox": 0.06216, "loss": 0.6275, "time": 0.95248}
{"mode": "val", "epoch": 16, "iter": 975, "lr": 5e-05, "bbox_mAP": 0.584, "bbox_mAP_50": 0.77, "bbox_mAP_75": 0.622, "bbox_mAP_s": 0.033, "bbox_mAP_m": 0.277, "bbox_mAP_l": 0.67, "bbox_mAP_copypaste": "0.584 0.770 0.622 0.033 0.277 0.670"}
{"mode": "train", "epoch": 17, "iter": 400, "lr": 4e-05, "memory": 11429, "data_time": 0.01782, "loss_rpn_cls": 0.02837, "loss_rpn_bbox": 0.01501, "s0.loss_cls": 0.1571, "s0.acc": 94.47577, "s0.loss_bbox": 0.11435, "s1.loss_cls": 0.07905, "s1.acc": 94.20801, "s1.loss_bbox": 0.10406, "s2.loss_cls": 0.03933, "s2.acc": 94.06736, "s2.loss_bbox": 0.06236, "loss": 0.59963, "time": 0.96628}
{"mode": "train", "epoch": 17, "iter": 800, "lr": 4e-05, "memory": 11429, "data_time": 0.0115, "loss_rpn_cls": 0.02634, "loss_rpn_bbox": 0.01463, "s0.loss_cls": 0.15585, "s0.acc": 94.52814, "s0.loss_bbox": 0.10974, "s1.loss_cls": 0.07953, "s1.acc": 94.17432, "s1.loss_bbox": 0.09966, "s2.loss_cls": 0.03965, "s2.acc": 94.01862, "s2.loss_bbox": 0.06056, "loss": 0.58596, "time": 0.95731}
{"mode": "train", "epoch": 17, "iter": 1200, "lr": 4e-05, "memory": 11429, "data_time": 0.01175, "loss_rpn_cls": 0.02742, "loss_rpn_bbox": 0.01557, "s0.loss_cls": 0.16497, "s0.acc": 94.23358, "s0.loss_bbox": 0.11732, "s1.loss_cls": 0.08376, "s1.acc": 93.91792, "s1.loss_bbox": 0.10645, "s2.loss_cls": 0.04207, "s2.acc": 93.7172, "s2.loss_bbox": 0.06483, "loss": 0.62239, "time": 0.95906}
{"mode": "val", "epoch": 17, "iter": 975, "lr": 4e-05, "bbox_mAP": 0.6, "bbox_mAP_50": 0.784, "bbox_mAP_75": 0.644, "bbox_mAP_s": 0.032, "bbox_mAP_m": 0.284, "bbox_mAP_l": 0.687, "bbox_mAP_copypaste": "0.600 0.784 0.644 0.032 0.284 0.687"}
{"mode": "train", "epoch": 18, "iter": 400, "lr": 4e-05, "memory": 11429, "data_time": 0.01775, "loss_rpn_cls": 0.02531, "loss_rpn_bbox": 0.01519, "s0.loss_cls": 0.14909, "s0.acc": 94.72742, "s0.loss_bbox": 0.10936, "s1.loss_cls": 0.07562, "s1.acc": 94.41146, "s1.loss_bbox": 0.10131, "s2.loss_cls": 0.03809, "s2.acc": 94.26555, "s2.loss_bbox": 0.06148, "loss": 0.57545, "time": 0.96954}
{"mode": "train", "epoch": 18, "iter": 800, "lr": 4e-05, "memory": 11429, "data_time": 0.01163, "loss_rpn_cls": 0.02576, "loss_rpn_bbox": 0.01533, "s0.loss_cls": 0.15493, "s0.acc": 94.52979, "s0.loss_bbox": 0.1123, "s1.loss_cls": 0.07759, "s1.acc": 94.30614, "s1.loss_bbox": 0.10104, "s2.loss_cls": 0.03887, "s2.acc": 94.17302, "s2.loss_bbox": 0.06104, "loss": 0.58686, "time": 0.95813}
{"mode": "train", "epoch": 18, "iter": 1200, "lr": 4e-05, "memory": 11429, "data_time": 0.0115, "loss_rpn_cls": 0.02621, "loss_rpn_bbox": 0.0147, "s0.loss_cls": 0.15728, "s0.acc": 94.4679, "s0.loss_bbox": 0.11295, "s1.loss_cls": 0.08035, "s1.acc": 94.09857, "s1.loss_bbox": 0.10324, "s2.loss_cls": 0.04038, "s2.acc": 93.87199, "s2.loss_bbox": 0.06293, "loss": 0.59805, "time": 0.95844}
{"mode": "val", "epoch": 18, "iter": 975, "lr": 4e-05, "bbox_mAP": 0.605, "bbox_mAP_50": 0.788, "bbox_mAP_75": 0.648, "bbox_mAP_s": 0.031, "bbox_mAP_m": 0.303, "bbox_mAP_l": 0.689, "bbox_mAP_copypaste": "0.605 0.788 0.648 0.031 0.303 0.689"}
{"mode": "train", "epoch": 19, "iter": 400, "lr": 3e-05, "memory": 11429, "data_time": 0.01794, "loss_rpn_cls": 0.02518, "loss_rpn_bbox": 0.01492, "s0.loss_cls": 0.1524, "s0.acc": 94.60138, "s0.loss_bbox": 0.11093, "s1.loss_cls": 0.07662, "s1.acc": 94.33346, "s1.loss_bbox": 0.10081, "s2.loss_cls": 0.03843, "s2.acc": 94.17587, "s2.loss_bbox": 0.06249, "loss": 0.58178, "time": 0.97602}
{"mode": "train", "epoch": 19, "iter": 800, "lr": 3e-05, "memory": 11429, "data_time": 0.01168, "loss_rpn_cls": 0.02468, "loss_rpn_bbox": 0.01427, "s0.loss_cls": 0.14157, "s0.acc": 95.01599, "s0.loss_bbox": 0.10619, "s1.loss_cls": 0.06998, "s1.acc": 94.90004, "s1.loss_bbox": 0.09621, "s2.loss_cls": 0.03481, "s2.acc": 94.80669, "s2.loss_bbox": 0.05872, "loss": 0.54644, "time": 0.96067}
{"mode": "train", "epoch": 19, "iter": 1200, "lr": 3e-05, "memory": 11429, "data_time": 0.01166, "loss_rpn_cls": 0.02376, "loss_rpn_bbox": 0.01431, "s0.loss_cls": 0.14927, "s0.acc": 94.72186, "s0.loss_bbox": 0.11055, "s1.loss_cls": 0.07486, "s1.acc": 94.47498, "s1.loss_bbox": 0.10106, "s2.loss_cls": 0.03728, "s2.acc": 94.33828, "s2.loss_bbox": 0.06071, "loss": 0.5718, "time": 0.96382}
{"mode": "val", "epoch": 19, "iter": 975, "lr": 3e-05, "bbox_mAP": 0.614, "bbox_mAP_50": 0.794, "bbox_mAP_75": 0.655, "bbox_mAP_s": 0.033, "bbox_mAP_m": 0.298, "bbox_mAP_l": 0.702, "bbox_mAP_copypaste": "0.614 0.794 0.655 0.033 0.298 0.702"}
{"mode": "train", "epoch": 20, "iter": 400, "lr": 3e-05, "memory": 11429, "data_time": 0.01784, "loss_rpn_cls": 0.02296, "loss_rpn_bbox": 0.01375, "s0.loss_cls": 0.13602, "s0.acc": 95.15253, "s0.loss_bbox": 0.10274, "s1.loss_cls": 0.06826, "s1.acc": 95.00805, "s1.loss_bbox": 0.09507, "s2.loss_cls": 0.03427, "s2.acc": 94.85327, "s2.loss_bbox": 0.05808, "loss": 0.53115, "time": 0.96359}
{"mode": "train", "epoch": 20, "iter": 800, "lr": 3e-05, "memory": 11429, "data_time": 0.01169, "loss_rpn_cls": 0.02226, "loss_rpn_bbox": 0.01422, "s0.loss_cls": 0.14211, "s0.acc": 94.95447, "s0.loss_bbox": 0.10437, "s1.loss_cls": 0.07094, "s1.acc": 94.80702, "s1.loss_bbox": 0.09581, "s2.loss_cls": 0.03557, "s2.acc": 94.66555, "s2.loss_bbox": 0.06022, "loss": 0.54549, "time": 0.96411}
{"mode": "train", "epoch": 20, "iter": 1200, "lr": 3e-05, "memory": 11429, "data_time": 0.01163, "loss_rpn_cls": 0.02553, "loss_rpn_bbox": 0.01472, "s0.loss_cls": 0.14186, "s0.acc": 95.00623, "s0.loss_bbox": 0.10989, "s1.loss_cls": 0.07017, "s1.acc": 94.91085, "s1.loss_bbox": 0.10085, "s2.loss_cls": 0.0349, "s2.acc": 94.74972, "s2.loss_bbox": 0.06154, "loss": 0.55947, "time": 0.96408}
{"mode": "val", "epoch": 20, "iter": 975, "lr": 3e-05, "bbox_mAP": 0.624, "bbox_mAP_50": 0.807, "bbox_mAP_75": 0.671, "bbox_mAP_s": 0.04, "bbox_mAP_m": 0.323, "bbox_mAP_l": 0.707, "bbox_mAP_copypaste": "0.624 0.807 0.671 0.040 0.323 0.707"}
{"mode": "train", "epoch": 21, "iter": 400, "lr": 2e-05, "memory": 11429, "data_time": 0.01797, "loss_rpn_cls": 0.02307, "loss_rpn_bbox": 0.01371, "s0.loss_cls": 0.13391, "s0.acc": 95.26526, "s0.loss_bbox": 0.10267, "s1.loss_cls": 0.06592, "s1.acc": 95.18715, "s1.loss_bbox": 0.09394, "s2.loss_cls": 0.03297, "s2.acc": 95.07675, "s2.loss_bbox": 0.05842, "loss": 0.5246, "time": 0.96406}
{"mode": "train", "epoch": 21, "iter": 800, "lr": 2e-05, "memory": 11429, "data_time": 0.01164, "loss_rpn_cls": 0.02213, "loss_rpn_bbox": 0.01409, "s0.loss_cls": 0.13402, "s0.acc": 95.21497, "s0.loss_bbox": 0.10372, "s1.loss_cls": 0.066, "s1.acc": 95.14771, "s1.loss_bbox": 0.09525, "s2.loss_cls": 0.0329, "s2.acc": 95.04761, "s2.loss_bbox": 0.05773, "loss": 0.52584, "time": 0.95804}
{"mode": "train", "epoch": 21, "iter": 1200, "lr": 2e-05, "memory": 11429, "data_time": 0.01165, "loss_rpn_cls": 0.02151, "loss_rpn_bbox": 0.01359, "s0.loss_cls": 0.13203, "s0.acc": 95.2254, "s0.loss_bbox": 0.1001, "s1.loss_cls": 0.06556, "s1.acc": 95.13, "s1.loss_bbox": 0.09196, "s2.loss_cls": 0.03297, "s2.acc": 95.02094, "s2.loss_bbox": 0.0581, "loss": 0.51582, "time": 0.95896}
{"mode": "val", "epoch": 21, "iter": 975, "lr": 2e-05, "bbox_mAP": 0.638, "bbox_mAP_50": 0.818, "bbox_mAP_75": 0.675, "bbox_mAP_s": 0.03, "bbox_mAP_m": 0.346, "bbox_mAP_l": 0.72, "bbox_mAP_copypaste": "0.638 0.818 0.675 0.030 0.346 0.720"}
{"mode": "train", "epoch": 22, "iter": 400, "lr": 1e-05, "memory": 11429, "data_time": 0.01791, "loss_rpn_cls": 0.02175, "loss_rpn_bbox": 0.01328, "s0.loss_cls": 0.12704, "s0.acc": 95.42938, "s0.loss_bbox": 0.10042, "s1.loss_cls": 0.06212, "s1.acc": 95.37335, "s1.loss_bbox": 0.09091, "s2.loss_cls": 0.03085, "s2.acc": 95.33094, "s2.loss_bbox": 0.05569, "loss": 0.50207, "time": 0.96186}
{"mode": "train", "epoch": 22, "iter": 800, "lr": 1e-05, "memory": 11429, "data_time": 0.01177, "loss_rpn_cls": 0.02177, "loss_rpn_bbox": 0.01355, "s0.loss_cls": 0.12789, "s0.acc": 95.4223, "s0.loss_bbox": 0.0997, "s1.loss_cls": 0.06322, "s1.acc": 95.32624, "s1.loss_bbox": 0.09261, "s2.loss_cls": 0.0316, "s2.acc": 95.23467, "s2.loss_bbox": 0.05807, "loss": 0.50839, "time": 0.9554}
{"mode": "train", "epoch": 22, "iter": 1200, "lr": 1e-05, "memory": 11429, "data_time": 0.01167, "loss_rpn_cls": 0.02171, "loss_rpn_bbox": 0.01368, "s0.loss_cls": 0.13187, "s0.acc": 95.31317, "s0.loss_bbox": 0.10093, "s1.loss_cls": 0.06479, "s1.acc": 95.22401, "s1.loss_bbox": 0.09326, "s2.loss_cls": 0.0323, "s2.acc": 95.11129, "s2.loss_bbox": 0.05799, "loss": 0.51653, "time": 0.96695}
{"mode": "val", "epoch": 22, "iter": 975, "lr": 1e-05, "bbox_mAP": 0.647, "bbox_mAP_50": 0.827, "bbox_mAP_75": 0.686, "bbox_mAP_s": 0.037, "bbox_mAP_m": 0.357, "bbox_mAP_l": 0.729, "bbox_mAP_copypaste": "0.647 0.827 0.686 0.037 0.357 0.729"}
{"mode": "train", "epoch": 23, "iter": 400, "lr": 1e-05, "memory": 11429, "data_time": 0.01784, "loss_rpn_cls": 0.02179, "loss_rpn_bbox": 0.01375, "s0.loss_cls": 0.12927, "s0.acc": 95.3678, "s0.loss_bbox": 0.10257, "s1.loss_cls": 0.06331, "s1.acc": 95.3412, "s1.loss_bbox": 0.09539, "s2.loss_cls": 0.03157, "s2.acc": 95.27296, "s2.loss_bbox": 0.05931, "loss": 0.51696, "time": 0.96422}
{"mode": "train", "epoch": 23, "iter": 800, "lr": 1e-05, "memory": 11429, "data_time": 0.01151, "loss_rpn_cls": 0.02112, "loss_rpn_bbox": 0.01308, "s0.loss_cls": 0.12309, "s0.acc": 95.55231, "s0.loss_bbox": 0.0957, "s1.loss_cls": 0.06015, "s1.acc": 95.53142, "s1.loss_bbox": 0.0881, "s2.loss_cls": 0.02997, "s2.acc": 95.46706, "s2.loss_bbox": 0.0553, "loss": 0.48653, "time": 0.95948}
{"mode": "train", "epoch": 23, "iter": 1200, "lr": 1e-05, "memory": 11429, "data_time": 0.01161, "loss_rpn_cls": 0.0202, "loss_rpn_bbox": 0.01311, "s0.loss_cls": 0.12229, "s0.acc": 95.61298, "s0.loss_bbox": 0.09687, "s1.loss_cls": 0.05936, "s1.acc": 95.66108, "s1.loss_bbox": 0.09027, "s2.loss_cls": 0.02965, "s2.acc": 95.61515, "s2.loss_bbox": 0.05634, "loss": 0.48808, "time": 0.95349}
{"mode": "val", "epoch": 23, "iter": 975, "lr": 1e-05, "bbox_mAP": 0.65, "bbox_mAP_50": 0.826, "bbox_mAP_75": 0.69, "bbox_mAP_s": 0.046, "bbox_mAP_m": 0.36, "bbox_mAP_l": 0.731, "bbox_mAP_copypaste": "0.650 0.826 0.690 0.046 0.360 0.731"}
{"mode": "train", "epoch": 24, "iter": 400, "lr": 0.0, "memory": 11429, "data_time": 0.01778, "loss_rpn_cls": 0.02171, "loss_rpn_bbox": 0.01369, "s0.loss_cls": 0.12613, "s0.acc": 95.47217, "s0.loss_bbox": 0.10007, "s1.loss_cls": 0.06125, "s1.acc": 95.50015, "s1.loss_bbox": 0.09277, "s2.loss_cls": 0.03042, "s2.acc": 95.41355, "s2.loss_bbox": 0.05853, "loss": 0.50458, "time": 0.96459}
{"mode": "train", "epoch": 24, "iter": 800, "lr": 0.0, "memory": 11429, "data_time": 0.01148, "loss_rpn_cls": 0.0198, "loss_rpn_bbox": 0.01307, "s0.loss_cls": 0.12002, "s0.acc": 95.6817, "s0.loss_bbox": 0.09474, "s1.loss_cls": 0.05833, "s1.acc": 95.7017, "s1.loss_bbox": 0.08839, "s2.loss_cls": 0.0291, "s2.acc": 95.60234, "s2.loss_bbox": 0.05616, "loss": 0.47961, "time": 0.95392}
{"mode": "train", "epoch": 24, "iter": 1200, "lr": 0.0, "memory": 11429, "data_time": 0.01167, "loss_rpn_cls": 0.02038, "loss_rpn_bbox": 0.01277, "s0.loss_cls": 0.11907, "s0.acc": 95.70557, "s0.loss_bbox": 0.09398, "s1.loss_cls": 0.05886, "s1.acc": 95.65923, "s1.loss_bbox": 0.08856, "s2.loss_cls": 0.02954, "s2.acc": 95.54731, "s2.loss_bbox": 0.05596, "loss": 0.47912, "time": 0.95137}
{"mode": "val", "epoch": 24, "iter": 975, "lr": 0.0, "bbox_mAP": 0.654, "bbox_mAP_50": 0.83, "bbox_mAP_75": 0.691, "bbox_mAP_s": 0.048, "bbox_mAP_m": 0.364, "bbox_mAP_l": 0.735, "bbox_mAP_copypaste": "0.654 0.830 0.691 0.048 0.364 0.735"}
{"mode": "train", "epoch": 25, "iter": 400, "lr": 0.0, "memory": 11429, "data_time": 0.01786, "loss_rpn_cls": 0.02064, "loss_rpn_bbox": 0.01338, "s0.loss_cls": 0.12362, "s0.acc": 95.56293, "s0.loss_bbox": 0.09866, "s1.loss_cls": 0.05994, "s1.acc": 95.59122, "s1.loss_bbox": 0.08997, "s2.loss_cls": 0.02993, "s2.acc": 95.51539, "s2.loss_bbox": 0.05716, "loss": 0.4933, "time": 0.96796}
{"mode": "train", "epoch": 25, "iter": 800, "lr": 0.0, "memory": 11429, "data_time": 0.01161, "loss_rpn_cls": 0.02104, "loss_rpn_bbox": 0.01341, "s0.loss_cls": 0.12013, "s0.acc": 95.65607, "s0.loss_bbox": 0.09748, "s1.loss_cls": 0.05854, "s1.acc": 95.66068, "s1.loss_bbox": 0.09031, "s2.loss_cls": 0.029, "s2.acc": 95.63157, "s2.loss_bbox": 0.05609, "loss": 0.486, "time": 0.95677}
{"mode": "train", "epoch": 25, "iter": 1200, "lr": 0.0, "memory": 11429, "data_time": 0.01159, "loss_rpn_cls": 0.01929, "loss_rpn_bbox": 0.01211, "s0.loss_cls": 0.11749, "s0.acc": 95.77289, "s0.loss_bbox": 0.09277, "s1.loss_cls": 0.05736, "s1.acc": 95.75059, "s1.loss_bbox": 0.08835, "s2.loss_cls": 0.02868, "s2.acc": 95.60675, "s2.loss_bbox": 0.05549, "loss": 0.47155, "time": 0.95698}
{"mode": "val", "epoch": 25, "iter": 975, "lr": 0.0, "bbox_mAP": 0.655, "bbox_mAP_50": 0.831, "bbox_mAP_75": 0.694, "bbox_mAP_s": 0.043, "bbox_mAP_m": 0.367, "bbox_mAP_l": 0.735, "bbox_mAP_copypaste": "0.655 0.831 0.694 0.043 0.367 0.735"}
{"mode": "train", "epoch": 26, "iter": 400, "lr": 5e-05, "memory": 11429, "data_time": 0.01785, "loss_rpn_cls": 0.02245, "loss_rpn_bbox": 0.01394, "s0.loss_cls": 0.13528, "s0.acc": 95.1889, "s0.loss_bbox": 0.10175, "s1.loss_cls": 0.06708, "s1.acc": 95.10012, "s1.loss_bbox": 0.09224, "s2.loss_cls": 0.03349, "s2.acc": 95.04046, "s2.loss_bbox": 0.05732, "loss": 0.52356, "time": 0.96434}
{"mode": "train", "epoch": 26, "iter": 800, "lr": 5e-05, "memory": 11429, "data_time": 0.0116, "loss_rpn_cls": 0.02449, "loss_rpn_bbox": 0.01508, "s0.loss_cls": 0.14392, "s0.acc": 94.93665, "s0.loss_bbox": 0.10714, "s1.loss_cls": 0.07163, "s1.acc": 94.81955, "s1.loss_bbox": 0.09979, "s2.loss_cls": 0.03598, "s2.acc": 94.68192, "s2.loss_bbox": 0.06237, "loss": 0.5604, "time": 0.96866}
{"mode": "train", "epoch": 26, "iter": 1200, "lr": 5e-05, "memory": 11429, "data_time": 0.01169, "loss_rpn_cls": 0.02471, "loss_rpn_bbox": 0.01463, "s0.loss_cls": 0.14879, "s0.acc": 94.78668, "s0.loss_bbox": 0.10875, "s1.loss_cls": 0.07394, "s1.acc": 94.67254, "s1.loss_bbox": 0.09891, "s2.loss_cls": 0.03703, "s2.acc": 94.54818, "s2.loss_bbox": 0.06027, "loss": 0.56702, "time": 0.96211}
{"mode": "val", "epoch": 26, "iter": 975, "lr": 5e-05, "bbox_mAP": 0.618, "bbox_mAP_50": 0.797, "bbox_mAP_75": 0.67, "bbox_mAP_s": 0.037, "bbox_mAP_m": 0.32, "bbox_mAP_l": 0.705, "bbox_mAP_copypaste": "0.618 0.797 0.670 0.037 0.320 0.705"}
{"mode": "train", "epoch": 27, "iter": 400, "lr": 5e-05, "memory": 11429, "data_time": 0.01791, "loss_rpn_cls": 0.02255, "loss_rpn_bbox": 0.01406, "s0.loss_cls": 0.13568, "s0.acc": 95.20129, "s0.loss_bbox": 0.10252, "s1.loss_cls": 0.06729, "s1.acc": 95.10645, "s1.loss_bbox": 0.09488, "s2.loss_cls": 0.0339, "s2.acc": 94.92668, "s2.loss_bbox": 0.05935, "loss": 0.53022, "time": 0.96637}
{"mode": "train", "epoch": 27, "iter": 800, "lr": 5e-05, "memory": 11429, "data_time": 0.01165, "loss_rpn_cls": 0.02455, "loss_rpn_bbox": 0.01472, "s0.loss_cls": 0.14356, "s0.acc": 94.99091, "s0.loss_bbox": 0.10323, "s1.loss_cls": 0.07181, "s1.acc": 94.83381, "s1.loss_bbox": 0.09496, "s2.loss_cls": 0.03611, "s2.acc": 94.69941, "s2.loss_bbox": 0.05862, "loss": 0.54755, "time": 0.95931}
{"mode": "train", "epoch": 27, "iter": 1200, "lr": 5e-05, "memory": 11429, "data_time": 0.0116, "loss_rpn_cls": 0.02548, "loss_rpn_bbox": 0.01527, "s0.loss_cls": 0.15097, "s0.acc": 94.65082, "s0.loss_bbox": 0.11112, "s1.loss_cls": 0.07514, "s1.acc": 94.46825, "s1.loss_bbox": 0.10105, "s2.loss_cls": 0.03792, "s2.acc": 94.30909, "s2.loss_bbox": 0.06229, "loss": 0.57925, "time": 0.96243}
{"mode": "val", "epoch": 27, "iter": 975, "lr": 5e-05, "bbox_mAP": 0.621, "bbox_mAP_50": 0.81, "bbox_mAP_75": 0.674, "bbox_mAP_s": 0.035, "bbox_mAP_m": 0.329, "bbox_mAP_l": 0.703, "bbox_mAP_copypaste": "0.621 0.810 0.674 0.035 0.329 0.703"}
{"mode": "train", "epoch": 28, "iter": 400, "lr": 5e-05, "memory": 11429, "data_time": 0.01797, "loss_rpn_cls": 0.02294, "loss_rpn_bbox": 0.01458, "s0.loss_cls": 0.13938, "s0.acc": 95.08624, "s0.loss_bbox": 0.10422, "s1.loss_cls": 0.0685, "s1.acc": 95.00947, "s1.loss_bbox": 0.09527, "s2.loss_cls": 0.03437, "s2.acc": 94.88233, "s2.loss_bbox": 0.06051, "loss": 0.53978, "time": 0.97107}
{"mode": "train", "epoch": 28, "iter": 800, "lr": 5e-05, "memory": 11429, "data_time": 0.01165, "loss_rpn_cls": 0.02353, "loss_rpn_bbox": 0.01495, "s0.loss_cls": 0.14426, "s0.acc": 94.85736, "s0.loss_bbox": 0.1075, "s1.loss_cls": 0.07161, "s1.acc": 94.74615, "s1.loss_bbox": 0.09837, "s2.loss_cls": 0.03605, "s2.acc": 94.57516, "s2.loss_bbox": 0.06135, "loss": 0.55763, "time": 0.96302}
{"mode": "train", "epoch": 28, "iter": 1200, "lr": 5e-05, "memory": 11429, "data_time": 0.01176, "loss_rpn_cls": 0.02305, "loss_rpn_bbox": 0.01422, "s0.loss_cls": 0.14136, "s0.acc": 94.96631, "s0.loss_bbox": 0.10463, "s1.loss_cls": 0.07108, "s1.acc": 94.79158, "s1.loss_bbox": 0.09695, "s2.loss_cls": 0.03587, "s2.acc": 94.62609, "s2.loss_bbox": 0.0615, "loss": 0.54867, "time": 0.97}
{"mode": "val", "epoch": 28, "iter": 975, "lr": 5e-05, "bbox_mAP": 0.617, "bbox_mAP_50": 0.806, "bbox_mAP_75": 0.665, "bbox_mAP_s": 0.039, "bbox_mAP_m": 0.335, "bbox_mAP_l": 0.7, "bbox_mAP_copypaste": "0.617 0.806 0.665 0.039 0.335 0.700"}
{"mode": "train", "epoch": 29, "iter": 400, "lr": 4e-05, "memory": 11429, "data_time": 0.01787, "loss_rpn_cls": 0.02225, "loss_rpn_bbox": 0.01365, "s0.loss_cls": 0.13637, "s0.acc": 95.15521, "s0.loss_bbox": 0.10211, "s1.loss_cls": 0.06722, "s1.acc": 95.08614, "s1.loss_bbox": 0.09488, "s2.loss_cls": 0.03363, "s2.acc": 94.95433, "s2.loss_bbox": 0.05968, "loss": 0.5298, "time": 0.9598}
{"mode": "train", "epoch": 29, "iter": 800, "lr": 4e-05, "memory": 11429, "data_time": 0.01174, "loss_rpn_cls": 0.02388, "loss_rpn_bbox": 0.01491, "s0.loss_cls": 0.13991, "s0.acc": 95.04718, "s0.loss_bbox": 0.10582, "s1.loss_cls": 0.06907, "s1.acc": 95.02061, "s1.loss_bbox": 0.0978, "s2.loss_cls": 0.03459, "s2.acc": 94.97059, "s2.loss_bbox": 0.06136, "loss": 0.54735, "time": 0.96477}
{"mode": "train", "epoch": 29, "iter": 1200, "lr": 4e-05, "memory": 11429, "data_time": 0.01172, "loss_rpn_cls": 0.02222, "loss_rpn_bbox": 0.01415, "s0.loss_cls": 0.13644, "s0.acc": 95.1651, "s0.loss_bbox": 0.10243, "s1.loss_cls": 0.06739, "s1.acc": 95.1114, "s1.loss_bbox": 0.09488, "s2.loss_cls": 0.03377, "s2.acc": 95.00024, "s2.loss_bbox": 0.05867, "loss": 0.52996, "time": 0.96125}
{"mode": "val", "epoch": 29, "iter": 975, "lr": 4e-05, "bbox_mAP": 0.636, "bbox_mAP_50": 0.817, "bbox_mAP_75": 0.689, "bbox_mAP_s": 0.027, "bbox_mAP_m": 0.344, "bbox_mAP_l": 0.72, "bbox_mAP_copypaste": "0.636 0.817 0.689 0.027 0.344 0.720"}
{"mode": "train", "epoch": 30, "iter": 400, "lr": 4e-05, "memory": 11429, "data_time": 0.01806, "loss_rpn_cls": 0.02044, "loss_rpn_bbox": 0.01338, "s0.loss_cls": 0.12826, "s0.acc": 95.43768, "s0.loss_bbox": 0.10057, "s1.loss_cls": 0.06213, "s1.acc": 95.50984, "s1.loss_bbox": 0.09428, "s2.loss_cls": 0.03113, "s2.acc": 95.42865, "s2.loss_bbox": 0.05978, "loss": 0.50996, "time": 0.97535}
{"mode": "train", "epoch": 30, "iter": 800, "lr": 4e-05, "memory": 11429, "data_time": 0.01182, "loss_rpn_cls": 0.0225, "loss_rpn_bbox": 0.0138, "s0.loss_cls": 0.12999, "s0.acc": 95.36462, "s0.loss_bbox": 0.10014, "s1.loss_cls": 0.06376, "s1.acc": 95.35876, "s1.loss_bbox": 0.09218, "s2.loss_cls": 0.03183, "s2.acc": 95.26923, "s2.loss_bbox": 0.05725, "loss": 0.51145, "time": 1.08161}
{"mode": "train", "epoch": 30, "iter": 1200, "lr": 4e-05, "memory": 11429, "data_time": 0.01167, "loss_rpn_cls": 0.02099, "loss_rpn_bbox": 0.01435, "s0.loss_cls": 0.13094, "s0.acc": 95.3385, "s0.loss_bbox": 0.10219, "s1.loss_cls": 0.06404, "s1.acc": 95.36065, "s1.loss_bbox": 0.09552, "s2.loss_cls": 0.03235, "s2.acc": 95.23634, "s2.loss_bbox": 0.0611, "loss": 0.52147, "time": 1.53973}
{"mode": "val", "epoch": 30, "iter": 975, "lr": 4e-05, "bbox_mAP": 0.647, "bbox_mAP_50": 0.827, "bbox_mAP_75": 0.695, "bbox_mAP_s": 0.035, "bbox_mAP_m": 0.358, "bbox_mAP_l": 0.729, "bbox_mAP_copypaste": "0.647 0.827 0.695 0.035 0.358 0.729"}
